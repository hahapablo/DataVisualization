{"version":3,"file":"static/js/889.0afda60d.chunk.js","mappings":"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","sources":["../node_modules/@nivo/annotations/src/props.ts","../node_modules/@nivo/annotations/src/utils.ts","../node_modules/@nivo/annotations/src/compute.ts","../node_modules/@nivo/annotations/src/hooks.ts","../node_modules/@nivo/annotations/src/canvas.ts","../node_modules/lodash/_arrayEach.js","../node_modules/lodash/_baseAssign.js","../node_modules/lodash/_baseAssignIn.js","../node_modules/lodash/_baseClone.js","../node_modules/lodash/_baseFilter.js","../node_modules/lodash/_baseIsMap.js","../node_modules/lodash/_baseIsSet.js","../node_modules/lodash/_baseUnset.js","../node_modules/lodash/_cloneDataView.js","../node_modules/lodash/_cloneRegExp.js","../node_modules/lodash/_cloneSymbol.js","../node_modules/lodash/_copySymbols.js","../node_modules/lodash/_copySymbolsIn.js","../node_modules/lodash/_customOmitClone.js","../node_modules/lodash/_getAllKeysIn.js","../node_modules/lodash/_getSymbolsIn.js","../node_modules/lodash/_initCloneArray.js","../node_modules/lodash/_initCloneByTag.js","../node_modules/lodash/_parent.js","../node_modules/lodash/filter.js","../node_modules/lodash/isMap.js","../node_modules/lodash/isSet.js","../node_modules/lodash/omit.js"],"sourcesContent":["export const defaultProps = {\n    dotSize: 4,\n    noteWidth: 120,\n    noteTextOffset: 8,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 13,\n}\n","import {\n    AnnotationSpec,\n    CircleAnnotationSpec,\n    DotAnnotationSpec,\n    Note,\n    NoteCanvas,\n    NoteSvg,\n    RectAnnotationSpec,\n} from './types'\nimport { isValidElement } from 'react'\n\nexport const isSvgNote = <Datum>(note: Note<Datum>): note is NoteSvg<Datum> => {\n    const noteType = typeof note\n\n    return (\n        isValidElement(note) ||\n        noteType === 'string' ||\n        noteType === 'function' ||\n        noteType === 'object'\n    )\n}\n\nexport const isCanvasNote = <Datum>(note: Note<Datum>): note is NoteCanvas<Datum> => {\n    const noteType = typeof note\n\n    return noteType === 'string' || noteType === 'function'\n}\n\nexport const isCircleAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is CircleAnnotationSpec<Datum> => annotationSpec.type === 'circle'\n\nexport const isDotAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is DotAnnotationSpec<Datum> => annotationSpec.type === 'dot'\n\nexport const isRectAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is RectAnnotationSpec<Datum> => annotationSpec.type === 'rect'\n","import { filter, isNumber, omit } from 'lodash'\nimport {\n    radiansToDegrees,\n    absoluteAngleDegrees,\n    degreesToRadians,\n    positionFromAngle,\n} from '@nivo/core'\nimport { defaultProps } from './props'\nimport {\n    AnnotationPositionGetter,\n    AnnotationDimensionsGetter,\n    BoundAnnotation,\n    AnnotationMatcher,\n    AnnotationInstructions,\n} from './types'\nimport { isCircleAnnotation, isRectAnnotation } from './utils'\n\nexport const bindAnnotations = <\n    Datum = {\n        x: number\n        y: number\n    }\n>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}): BoundAnnotation<Datum>[] =>\n    annotations.reduce((acc: BoundAnnotation<Datum>[], annotation) => {\n        const offset = annotation.offset || 0\n\n        return [\n            ...acc,\n            ...filter<Datum>(data, annotation.match).map(datum => {\n                const position = getPosition(datum)\n                const dimensions = getDimensions(datum)\n\n                if (isCircleAnnotation(annotation) || isRectAnnotation(annotation)) {\n                    dimensions.size = dimensions.size + offset * 2\n                    dimensions.width = dimensions.width + offset * 2\n                    dimensions.height = dimensions.height + offset * 2\n                }\n\n                // acc.push({\n                //     ...omit(annotation, ['match', 'offset']),\n                //     ...position,\n                //     ...dimensions,\n                //     size: annotation.size || dimensions.size,\n                //     datum,\n                // } as any)\n                // return [\n                //     ...acc,\n                //     {\n                //         ...omit(annotation, ['match', 'offset']),\n                //         ...position,\n                //         ...dimensions,\n                //         size: annotation.size || dimensions.size,\n                //         datum,\n                //     },\n                // ]\n                return {\n                    ...omit(annotation, ['match', 'offset']),\n                    ...position,\n                    ...dimensions,\n                    size: annotation.size || dimensions.size,\n                    datum,\n                } as Required<BoundAnnotation<Datum>>\n            }),\n        ]\n\n        // return acc\n    }, [])\n\nexport const getLinkAngle = (\n    sourceX: number,\n    sourceY: number,\n    targetX: number,\n    targetY: number\n) => {\n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX)\n\n    return absoluteAngleDegrees(radiansToDegrees(angle))\n}\n\nexport const computeAnnotation = <Datum>(\n    annotation: BoundAnnotation<Datum>\n): AnnotationInstructions => {\n    const {\n        x,\n        y,\n        noteX,\n        noteY,\n        noteWidth = defaultProps.noteWidth,\n        noteTextOffset = defaultProps.noteTextOffset,\n    } = annotation\n\n    let computedNoteX: number\n    let computedNoteY: number\n\n    if (isNumber(noteX)) {\n        computedNoteX = x + noteX\n    } else if (noteX.abs !== undefined) {\n        computedNoteX = noteX.abs\n    } else {\n        throw new Error(`noteX should be either a number or an object containing an 'abs' property`)\n    }\n\n    if (isNumber(noteY)) {\n        computedNoteY = y + noteY\n    } else if (noteY.abs !== undefined) {\n        computedNoteY = noteY.abs\n    } else {\n        throw new Error(`noteY should be either a number or an object containing an 'abs' property`)\n    }\n\n    let computedX = x\n    let computedY = y\n\n    const angle = getLinkAngle(x, y, computedNoteX, computedNoteY)\n\n    if (isCircleAnnotation<Datum>(annotation)) {\n        const position = positionFromAngle(degreesToRadians(angle), annotation.size / 2)\n        computedX += position.x\n        computedY += position.y\n    }\n\n    if (isRectAnnotation<Datum>(annotation)) {\n        const eighth = Math.round((angle + 90) / 45) % 8\n        if (eighth === 0) {\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 1) {\n            computedX += annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 2) {\n            computedX += annotation.width / 2\n        }\n        if (eighth === 3) {\n            computedX += annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 4) {\n            computedY += annotation.height / 2\n        }\n        if (eighth === 5) {\n            computedX -= annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 6) {\n            computedX -= annotation.width / 2\n        }\n        if (eighth === 7) {\n            computedX -= annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n    }\n\n    let textX = computedNoteX\n    const textY = computedNoteY - noteTextOffset\n\n    let noteLineX = computedNoteX\n    const noteLineY = computedNoteY\n\n    if ((angle + 90) % 360 > 180) {\n        textX -= noteWidth\n        noteLineX -= noteWidth\n    } else {\n        noteLineX += noteWidth\n    }\n\n    return {\n        points: [\n            [computedX, computedY],\n            [computedNoteX, computedNoteY],\n            [noteLineX, noteLineY],\n        ] as [number, number][],\n        text: [textX, textY],\n        angle: angle + 90,\n    }\n}\n","import { useMemo } from 'react'\nimport { bindAnnotations, computeAnnotation } from './compute'\nimport {\n    AnnotationDimensionsGetter,\n    AnnotationMatcher,\n    AnnotationPositionGetter,\n    BoundAnnotation,\n} from './types'\n\n/**\n * Bind annotations to a dataset.\n */\nexport const useAnnotations = <Datum>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}) =>\n    useMemo(\n        () =>\n            bindAnnotations<Datum>({\n                data,\n                annotations,\n                getPosition,\n                getDimensions,\n            }),\n        [data, annotations, getPosition, getDimensions]\n    )\n\nexport const useComputedAnnotations = <Datum>({\n    annotations,\n}: {\n    annotations: BoundAnnotation<Datum>[]\n}) =>\n    useMemo(\n        () =>\n            annotations.map(annotation => ({\n                ...annotation,\n                computed: computeAnnotation<Datum>({\n                    ...annotation,\n                }),\n            })),\n        [annotations]\n    )\n\nexport const useComputedAnnotation = <Datum>(annotation: BoundAnnotation<Datum>) =>\n    useMemo(() => computeAnnotation<Datum>(annotation), [annotation])\n","import { CompleteTheme } from '@nivo/core'\nimport { ComputedAnnotation } from './types'\nimport { isCanvasNote, isCircleAnnotation, isDotAnnotation, isRectAnnotation } from './utils'\n\nconst drawPoints = (ctx: CanvasRenderingContext2D, points: [number, number][]) => {\n    points.forEach(([x, y], index) => {\n        if (index === 0) {\n            ctx.moveTo(x, y)\n        } else {\n            ctx.lineTo(x, y)\n        }\n    })\n}\n\nexport const renderAnnotationsToCanvas = <Datum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        annotations,\n        theme,\n    }: {\n        annotations: ComputedAnnotation<Datum>[]\n        theme: CompleteTheme\n    }\n) => {\n    if (annotations.length === 0) return\n\n    ctx.save()\n    annotations.forEach(annotation => {\n        if (!isCanvasNote(annotation.note)) {\n            throw new Error('note is invalid for canvas implementation')\n        }\n\n        if (theme.annotations.link.outlineWidth > 0) {\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.annotations.link.outlineColor\n            ctx.lineWidth =\n                theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n            ctx.beginPath()\n            drawPoints(ctx, annotation.computed.points)\n            ctx.stroke()\n            ctx.lineCap = 'butt'\n        }\n\n        if (isCircleAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation) && theme.annotations.symbol.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.symbol.outlineColor\n            ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isRectAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        ctx.strokeStyle = theme.annotations.link.stroke\n        ctx.lineWidth = theme.annotations.link.strokeWidth\n        ctx.beginPath()\n        drawPoints(ctx, annotation.computed.points)\n        ctx.stroke()\n\n        if (isCircleAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation)) {\n            ctx.fillStyle = theme.annotations.symbol.fill\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.fill()\n        }\n\n        if (isRectAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        if (typeof annotation.note === 'function') {\n            annotation.note(ctx, {\n                datum: annotation.datum,\n                x: annotation.computed.text[0],\n                y: annotation.computed.text[1],\n                theme,\n            })\n        } else {\n            ctx.font = `${theme.annotations.text.fontSize}px ${theme.annotations.text.fontFamily}`\n            ctx.textAlign = 'left'\n            ctx.textBaseline = 'alphabetic'\n\n            ctx.fillStyle = theme.annotations.text.fill\n            ctx.strokeStyle = theme.annotations.text.outlineColor\n            ctx.lineWidth = theme.annotations.text.outlineWidth * 2\n\n            if (theme.annotations.text.outlineWidth > 0) {\n                ctx.lineJoin = 'round'\n                ctx.strokeText(\n                    annotation.note,\n                    annotation.computed.text[0],\n                    annotation.computed.text[1]\n                )\n                ctx.lineJoin = 'miter'\n            }\n            ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1])\n        }\n    })\n    ctx.restore()\n}\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n"],"names":["k","b","t","type","w","z","C","n","i","o","x","a","y","r","noteX","s","noteY","h","noteWidth","d","c","noteTextOffset","f","e","abs","Error","m","Math","atan2","S","p","l","u","size","g","round","height","width","W","v","points","text","angle","O","data","annotations","getPosition","getDimensions","reduce","offset","concat","match","map","datum","P","j","computed","q","forEach","moveTo","lineTo","J","theme","length","save","note","link","outlineWidth","lineCap","strokeStyle","outlineColor","lineWidth","strokeWidth","beginPath","stroke","outline","arc","PI","symbol","rect","fillStyle","fill","font","fontSize","fontFamily","textAlign","textBaseline","lineJoin","strokeText","fillText","restore","module","exports","array","iteratee","index","copyObject","require","keys","object","source","keysIn","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isArray","isBuffer","isMap","isObject","isSet","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","argsTag","funcTag","genTag","objectTag","cloneableTags","baseClone","value","bitmask","customizer","key","stack","result","isDeep","isFlat","isFull","undefined","isArr","tag","isFunc","stacked","get","set","subValue","add","props","baseEach","collection","predicate","push","isObjectLike","mapTag","setTag","castPath","last","parent","toKey","path","cloneArrayBuffer","dataView","buffer","constructor","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","Symbol","symbolProto","prototype","symbolValueOf","valueOf","Object","call","getSymbols","getSymbolsIn","isPlainObject","baseGetAllKeys","arrayPush","getPrototype","stubArray","getOwnPropertySymbols","hasOwnProperty","input","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","boolTag","dateTag","numberTag","regexpTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","Ctor","baseGet","baseSlice","arrayFilter","baseFilter","baseIteratee","baseIsMap","baseUnary","nodeUtil","nodeIsMap","baseIsSet","nodeIsSet","arrayMap","baseUnset","customOmitClone","flatRest","omit","paths"],"sourceRoot":""}