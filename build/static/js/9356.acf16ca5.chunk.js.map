{"version":3,"file":"static/js/9356.acf16ca5.chunk.js","mappings":"2MAAO,IAAMA,EAAgB,CACzB,CAACC,MAAO,OAAQC,MAAO,OAAQC,OAAQ,CAAC,UAAW,YACnD,CAACF,MAAO,OAAQC,MAAO,OAAQC,OAAQ,CAAC,UAAU,YAClD,CAACF,MAAO,QAASC,MAAO,QAASC,OAAQ,CAAC,UAAW,YACrD,CAACF,MAAO,WAAYC,MAAO,WAAYC,OAAQ,CAAC,UAAW,YAC3D,CAACF,MAAO,SAAUC,MAAO,SAAUC,OAAQ,CAAC,UAAW,YACvD,CAACF,MAAO,SAAUC,MAAO,SAAUC,OAAQ,CAAC,UAAW,Y,6IC8B9CC,EAAAA,GAAAA,aAAAA,QACKA,EAAAA,GAAAA,aAAAA,O,sIC6BlB,EAzDmB,WAEf,IAAMC,EAAS,CACX,CAAEC,EAAG,KAAOC,EAAG,MAAOC,KAAK,mCAC3B,CAAEF,EAAG,MAAOC,EAAG,MAAOC,KAAK,iCAC3B,CAAEF,EAAG,MAAOC,EAAG,MAAOC,KAAK,8BAC3B,CAAEF,EAAG,MAAOC,EAAG,MAAOC,KAAK,iCAC3B,CAAEF,EAAG,MAAOC,EAAG,MAAOC,KAAK,wCAG/B,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACAC,EAAAA,EAAAA,MAACC,EAAAA,MAAK,CAAAF,SAAA,EACFF,EAAAA,EAAAA,KAACK,EAAAA,YAAW,CAAAH,UACRF,EAAAA,EAAAA,KAACM,EAAAA,KAAI,CAAAJ,UACDF,EAAAA,EAAAA,KAACO,EAAAA,KAAI,CAACC,GAAI,EAAGC,MAAO,CAACC,SAAS,IAAIR,UAC9BF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,mCAKlBF,EAAAA,EAAAA,KAACW,EAAAA,UAAS,CAAAT,UACNF,EAAAA,EAAAA,KAACY,EAAAA,EAAmB,CAACC,MAAM,MAAMC,OAAQ,IAAIZ,UACzCC,EAAAA,EAAAA,MAACY,EAAAA,EAAY,CACXC,OAAQ,CACNC,IAAK,GACLC,MAAO,EACPC,OAAQ,GACRC,KAAM,IACNlB,SAAA,EAEFF,EAAAA,EAAAA,KAACqB,EAAAA,EAAa,KACdrB,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,CAACC,KAAK,SAASC,QAAQ,IAAIzB,KAAK,kBAAkB0B,KAAK,IAAIhB,MAAO,CAAEC,SAAU,IAAKR,UACvFF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAK,CAAClC,MAAQ,kBAAkBmC,SAAU,SAASH,QAAQ,IAAIf,MAAO,CAAEC,SAAU,SAGrFV,EAAAA,EAAAA,KAAC4B,EAAAA,EAAK,CAACL,KAAK,SAASC,QAAQ,IAAIzB,KAAK,oBAAoB0B,KAAK,IAAIhB,MAAO,CAAEC,SAAU,IAAKR,UACzFF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAK,CAAClC,MAAQ,oBAAoBqC,QAAS,GAAIC,MAAM,MAAMH,SAAS,OAAOH,QAAQ,IAAIf,MAAO,CAAEC,SAAU,SAG7GV,EAAAA,EAAAA,KAAC+B,EAAAA,EAAO,CAACC,OAAQ,CAAEC,gBAAiB,UAEpC9B,EAAAA,EAAAA,MAAC+B,EAAAA,EAAO,CAACnC,KAAK,OAAOoC,KAAMvC,EAAQwC,KAAK,UAASlC,SAAA,EAC/CF,EAAAA,EAAAA,KAACqC,EAAAA,EAAS,CAACb,QAAQ,OAAOG,SAAS,OAAOG,MAAO,EAAGjB,MAAO,IAAKJ,MAAO,CAACC,SAAU,GAAI0B,KAAK,UAC1FxC,EAAO0C,KAAI,SAACC,EAAOC,GAAK,OACvBxC,EAAAA,EAAAA,KAACyC,EAAAA,EAAI,CAAuBL,KAAM,WAAU,QAAAM,OAAzBF,GAEZ,kBASjC,C","sources":["views/nivo/ColorSchemeOptions.js","../node_modules/@nivo/funnel/src/props.tsx","views/nivo/NivoFunnel.js"],"sourcesContent":["export const SchemeOptions = [\n    {value: 'nivo', label: 'Nivo', colors: ['#ff0000', '#234535']},\n    {value: 'reds', label: 'Reds', colors: ['#00FF00','#236456']},\n    {value: 'blues', label: 'Blues', colors: ['#00FFFF', '#572535']},\n    {value: 'spectral', label: 'Spectral', colors: ['#0FFFF0', '#765436']},\n    {value: 'accent', label: 'Accent', colors: ['#11FF22', '#124535']},\n    {value: 'paired', label: 'Paired', colors: ['#FF2344', '#875797']},\n]\n","// @ts-ignore\nimport { MotionConfigProvider } from '@nivo/core'\nimport { FunnelLayerId } from './types'\n\nexport const svgDefaultProps = {\n    layers: ['separators', 'parts', 'labels', 'annotations'] as FunnelLayerId[],\n\n    direction: 'vertical' as const,\n    interpolation: 'smooth' as const,\n    spacing: 0,\n    shapeBlending: 0.66,\n\n    colors: { scheme: 'nivo' as const },\n    fillOpacity: 1,\n\n    borderWidth: 6,\n    borderColor: { from: 'color' },\n    borderOpacity: 0.66,\n\n    enableLabel: true,\n    labelColor: { theme: 'background' },\n\n    enableBeforeSeparators: true,\n    beforeSeparatorLength: 0,\n    beforeSeparatorOffset: 0,\n    enableAfterSeparators: true,\n    afterSeparatorLength: 0,\n    afterSeparatorOffset: 0,\n\n    annotations: [],\n\n    isInteractive: true,\n    currentPartSizeExtension: 0,\n\n    role: 'img',\n\n    animate: MotionConfigProvider.defaultProps.animate,\n    motionConfig: MotionConfigProvider.defaultProps.config,\n}\n","import React, {useState} from \"react\";\nimport PropTypes from 'prop-types'\nimport { ResponsiveFunnel } from \"@nivo/funnel\";\nimport { CButton, CButtonGroup, CCard, CCardBody, CCardHeader, CCol, CHeader, CRow } from '@coreui/react'\nimport {SchemeOptions} from './ColorSchemeOptions'\nimport Select from \"react-select\"\nimport { ResponsiveContainer, ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Cell, Legend, Label, LabelList } from 'recharts';\n\n\nconst NivoFunnel = () => {\n\n    const data01 = [\n        { x: 18.50, y: 12.68, name:\"FCF US Quality Small Size Index\" },\n        { x: 16.13, y: 11.59, name:\"FCF US Quality Momentum Index\" },\n        { x: 15.53, y: 12.28, name:\"FCF US Quality Value Index\"  },\n        { x: 14.53, y: 11.79, name:\"FCF US Quality Dividend Index\" },\n        { x: 13.22, y: 10.95, name:\"FCF US Quality Low Volatility Index\" },\n      ];\n    \n    return(\n        <>\n        <CCard>\n            <CCardHeader>\n                <CRow>\n                    <CCol sm={6} style={{fontSize:13}}>\n                        <span>FCF Profitability Index</span>\n                    </CCol>\n                </CRow>\n                \n            </CCardHeader>\n            <CCardBody>\n                <ResponsiveContainer width=\"90%\" height={400}>\n                    <ScatterChart\n                      margin={{\n                        top: 20 ,\n                        right: 0,\n                        bottom: 20,\n                        left: 10,\n                      }}\n                    >\n                      <CartesianGrid />\n                      <XAxis type=\"number\" dataKey=\"x\" name=\"Annualized Risk\" unit=\"%\" style={{ fontSize: 12 }} >\n                        <Label value = \"Annualized Risk\" position =\"bottom\" dataKey=\"x\" style={{ fontSize: 12 }} ></Label>\n                      </XAxis> \n    \n                      <YAxis type=\"number\" dataKey=\"y\" name=\"Annualized Return\" unit=\"%\" style={{ fontSize: 12 }} >\n                        <Label value = \"Annualized Return\" offset={-10} angle=\"-90\" position=\"left\" dataKey=\"y\" style={{ fontSize: 12 }} ></Label>\n                      </YAxis>\n    \n                      <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n                      \n                      <Scatter name=\"2023\" data={data01} fill=\"#8884d8\" >\n                        <LabelList dataKey=\"name\" position=\"left\" angle={0} width={300} style={{fontSize: 12, fill:\"grey\" }} />\n                        {data01.map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={\"#8884d8\"}>\n                              \n                          </Cell>\n                        ))}\n                      </Scatter>\n                    </ScatterChart>\n                </ResponsiveContainer>\n            </CCardBody>\n        </CCard>\n        </>\n    )\n}\nexport default NivoFunnel;\n"],"names":["SchemeOptions","value","label","colors","a","data01","x","y","name","_jsx","_Fragment","children","_jsxs","CCard","CCardHeader","CRow","CCol","sm","style","fontSize","CCardBody","ResponsiveContainer","width","height","ScatterChart","margin","top","right","bottom","left","CartesianGrid","XAxis","type","dataKey","unit","Label","position","YAxis","offset","angle","Tooltip","cursor","strokeDasharray","Scatter","data","fill","LabelList","map","entry","index","Cell","concat"],"sourceRoot":""}