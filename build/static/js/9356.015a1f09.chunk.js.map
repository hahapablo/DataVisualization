{"version":3,"file":"static/js/9356.015a1f09.chunk.js","mappings":"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","sources":["views/nivo/ColorSchemeOptions.js","../node_modules/@nivo/funnel/src/props.tsx","../node_modules/@nivo/funnel/src/PartTooltip.tsx","../node_modules/@nivo/funnel/src/hooks.ts","../node_modules/@nivo/funnel/src/Part.tsx","../node_modules/@nivo/funnel/src/Parts.tsx","../node_modules/@nivo/funnel/src/PartLabel.tsx","../node_modules/@nivo/funnel/src/PartLabels.tsx","../node_modules/@nivo/funnel/src/Separator.tsx","../node_modules/@nivo/funnel/src/Separators.tsx","../node_modules/@nivo/funnel/src/FunnelAnnotations.tsx","../node_modules/@nivo/funnel/src/Funnel.tsx","../node_modules/@nivo/funnel/src/ResponsiveFunnel.tsx","views/nivo/NivoFunnel.js","../node_modules/d3-path/src/path.js","../node_modules/d3-shape/src/area.js","../node_modules/d3-shape/src/line.js","../node_modules/d3-shape/src/point.js"],"sourcesContent":["export const SchemeOptions = [\n    {value: 'nivo', label: 'Nivo', colors: ['#ff0000', '#234535']},\n    {value: 'reds', label: 'Reds', colors: ['#00FF00','#236456']},\n    {value: 'blues', label: 'Blues', colors: ['#00FFFF', '#572535']},\n    {value: 'spectral', label: 'Spectral', colors: ['#0FFFF0', '#765436']},\n    {value: 'accent', label: 'Accent', colors: ['#11FF22', '#124535']},\n    {value: 'paired', label: 'Paired', colors: ['#FF2344', '#875797']},\n]\n","// @ts-ignore\nimport { MotionConfigProvider } from '@nivo/core'\nimport { FunnelLayerId } from './types'\n\nexport const svgDefaultProps = {\n    layers: ['separators', 'parts', 'labels', 'annotations'] as FunnelLayerId[],\n\n    direction: 'vertical' as const,\n    interpolation: 'smooth' as const,\n    spacing: 0,\n    shapeBlending: 0.66,\n\n    colors: { scheme: 'nivo' as const },\n    fillOpacity: 1,\n\n    borderWidth: 6,\n    borderColor: { from: 'color' },\n    borderOpacity: 0.66,\n\n    enableLabel: true,\n    labelColor: { theme: 'background' },\n\n    enableBeforeSeparators: true,\n    beforeSeparatorLength: 0,\n    beforeSeparatorOffset: 0,\n    enableAfterSeparators: true,\n    afterSeparatorLength: 0,\n    afterSeparatorOffset: 0,\n\n    annotations: [],\n\n    isInteractive: true,\n    currentPartSizeExtension: 0,\n\n    role: 'img',\n\n    animate: MotionConfigProvider.defaultProps.animate,\n    motionConfig: MotionConfigProvider.defaultProps.config,\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { FunnelDatum, FunnelPartWithHandlers } from './types'\n\nexport interface PartTooltipProps<D extends FunnelDatum> {\n    part: FunnelPartWithHandlers<D>\n}\n\nexport const PartTooltip = <D extends FunnelDatum>({ part }: PartTooltipProps<D>) => (\n    <BasicTooltip\n        id={part.data.label}\n        value={part.formattedValue}\n        color={part.color}\n        enableChip={true}\n    />\n)\n","import { createElement, useMemo, useState, MouseEvent } from 'react'\nimport { line, area, curveBasis, curveLinear } from 'd3-shape'\nimport { ScaleLinear, scaleLinear } from 'd3-scale'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { useTheme, useValueFormatter } from '@nivo/core'\nimport { useAnnotations } from '@nivo/annotations'\nimport { useTooltip, TooltipActionsContextData } from '@nivo/tooltip'\nimport { svgDefaultProps as defaults } from './props'\nimport { PartTooltip, PartTooltipProps } from './PartTooltip'\nimport {\n    FunnelDatum,\n    FunnelCommonProps,\n    FunnelDataProps,\n    FunnelPart,\n    SeparatorProps,\n    FunnelCustomLayerProps,\n    FunnelAreaGenerator,\n    FunnelAreaPoint,\n    FunnelBorderGenerator,\n    Position,\n} from './types'\n\nexport const computeShapeGenerators = <D extends FunnelDatum>(\n    interpolation: FunnelCommonProps<D>['interpolation'],\n    direction: FunnelCommonProps<D>['direction']\n): [FunnelAreaGenerator, FunnelBorderGenerator] => {\n    // area generator which is used to draw funnel chart parts\n    const areaGenerator: FunnelAreaGenerator = area<FunnelAreaPoint>()\n    if (direction === 'vertical') {\n        areaGenerator\n            .curve(interpolation === 'smooth' ? curveBasis : curveLinear)\n            .x0(d => d.x0)\n            .x1(d => d.x1)\n            .y(d => d.y)\n    } else {\n        areaGenerator\n            .curve(interpolation === 'smooth' ? curveBasis : curveLinear)\n            .y0(d => d.y0)\n            .y1(d => d.y1)\n            .x(d => d.x)\n    }\n\n    return [\n        areaGenerator,\n        // we're using a different line generator to draw borders, this way\n        // we we don't have borders joining each side of the parts.\n        // it's important to have an empty point when defining the points\n        // to be used along with this, otherwise we'll get a line between both sides.\n        line<Position | null>()\n            .defined(d => d !== null)\n            .x(d => d!.x)\n            .y(d => d!.y)\n            .curve(interpolation === 'smooth' ? curveBasis : curveLinear),\n    ]\n}\n\ninterface CustomBandScale {\n    (index: number): number\n    bandwidth: number\n}\n\nexport const computeScales = <D extends FunnelDatum>({\n    data,\n    direction,\n    width,\n    height,\n    spacing,\n}: {\n    data: FunnelDataProps<D>['data']\n    direction: FunnelCommonProps<D>['direction']\n    width: number\n    height: number\n    spacing: number\n}): [CustomBandScale, ScaleLinear<number, number>] => {\n    let bandScaleSize\n    let linearScaleSize\n    if (direction === 'vertical') {\n        bandScaleSize = height\n        linearScaleSize = width\n    } else {\n        bandScaleSize = width\n        linearScaleSize = height\n    }\n\n    const bandwidth = (bandScaleSize - spacing * (data.length - 1)) / data.length\n\n    // we're not using d3 band scale here to be able to get\n    // the actual paddingInner value in pixels, required to\n    // create centered separator lines between parts\n    const bandScale = (index: number) => spacing * index + bandwidth * index\n    bandScale.bandwidth = bandwidth\n\n    const allValues = data.map(d => d.value)\n\n    const linearScale = scaleLinear()\n        .domain([0, Math.max(...allValues)])\n        .range([0, linearScaleSize])\n\n    return [bandScale, linearScale]\n}\n\nexport const computeSeparators = <D extends FunnelDatum>({\n    parts,\n    direction,\n    width,\n    height,\n    spacing,\n    enableBeforeSeparators,\n    beforeSeparatorOffset,\n    enableAfterSeparators,\n    afterSeparatorOffset,\n}: {\n    parts: FunnelPart<D>[]\n    direction: FunnelCommonProps<D>['direction']\n    width: number\n    height: number\n    spacing: number\n    enableBeforeSeparators: boolean\n    beforeSeparatorOffset: number\n    enableAfterSeparators: boolean\n    afterSeparatorOffset: number\n}) => {\n    const beforeSeparators: SeparatorProps[] = []\n    const afterSeparators: SeparatorProps[] = []\n    const lastPart = parts[parts.length - 1]\n\n    if (direction === 'vertical') {\n        parts.forEach(part => {\n            const y = part.y0 - spacing / 2\n\n            if (enableBeforeSeparators) {\n                beforeSeparators.push({\n                    partId: part.data.id,\n                    x0: 0,\n                    x1: part.x0 - beforeSeparatorOffset,\n                    y0: y,\n                    y1: y,\n                })\n            }\n            if (enableAfterSeparators) {\n                afterSeparators.push({\n                    partId: part.data.id,\n                    x0: part.x1 + afterSeparatorOffset,\n                    x1: width,\n                    y0: y,\n                    y1: y,\n                })\n            }\n        })\n\n        const y = lastPart.y1\n        if (enableBeforeSeparators) {\n            beforeSeparators.push({\n                ...beforeSeparators[beforeSeparators.length - 1],\n                partId: 'none',\n                y0: y,\n                y1: y,\n            })\n        }\n        if (enableAfterSeparators) {\n            afterSeparators.push({\n                ...afterSeparators[afterSeparators.length - 1],\n                partId: 'none',\n                y0: y,\n                y1: y,\n            })\n        }\n    } else if (direction === 'horizontal') {\n        parts.forEach(part => {\n            const x = part.x0 - spacing / 2\n\n            beforeSeparators.push({\n                partId: part.data.id,\n                x0: x,\n                x1: x,\n                y0: 0,\n                y1: part.y0 - beforeSeparatorOffset,\n            })\n            afterSeparators.push({\n                partId: part.data.id,\n                x0: x,\n                x1: x,\n                y0: part.y1 + afterSeparatorOffset,\n                y1: height,\n            })\n        })\n\n        const x = lastPart.x1\n        beforeSeparators.push({\n            ...beforeSeparators[beforeSeparators.length - 1],\n            partId: 'none',\n            x0: x,\n            x1: x,\n        })\n        afterSeparators.push({\n            ...afterSeparators[afterSeparators.length - 1],\n            partId: 'none',\n            x0: x,\n            x1: x,\n        })\n    }\n\n    return [beforeSeparators, afterSeparators]\n}\n\nexport const computePartsHandlers = <D extends FunnelDatum>({\n    parts,\n    setCurrentPartId,\n    isInteractive,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n    onClick,\n    showTooltipFromEvent,\n    hideTooltip,\n    tooltip = PartTooltip,\n}: {\n    parts: FunnelPart<D>[]\n    setCurrentPartId: (id: string | number | null) => void\n    isInteractive: FunnelCommonProps<D>['isInteractive']\n    onMouseEnter?: FunnelCommonProps<D>['onMouseEnter']\n    onMouseLeave?: FunnelCommonProps<D>['onMouseLeave']\n    onMouseMove?: FunnelCommonProps<D>['onMouseMove']\n    onClick?: FunnelCommonProps<D>['onClick']\n    showTooltipFromEvent: TooltipActionsContextData['showTooltipFromEvent']\n    hideTooltip: () => void\n    tooltip?: (props: PartTooltipProps<D>) => JSX.Element\n}) => {\n    if (!isInteractive) return parts\n\n    return parts.map(part => {\n        const boundOnMouseEnter = (event: MouseEvent) => {\n            setCurrentPartId(part.data.id)\n            showTooltipFromEvent(createElement(tooltip, { part }), event)\n            onMouseEnter !== undefined && onMouseEnter(part, event)\n        }\n\n        const boundOnMouseLeave = (event: MouseEvent) => {\n            setCurrentPartId(null)\n            hideTooltip()\n            onMouseLeave !== undefined && onMouseLeave(part, event)\n        }\n\n        const boundOnMouseMove = (event: MouseEvent) => {\n            showTooltipFromEvent(createElement(tooltip, { part }), event)\n            onMouseMove !== undefined && onMouseMove(part, event)\n        }\n\n        const boundOnClick =\n            onClick !== undefined\n                ? (event: MouseEvent) => {\n                      onClick(part, event)\n                  }\n                : undefined\n\n        return {\n            ...part,\n            onMouseEnter: boundOnMouseEnter,\n            onMouseLeave: boundOnMouseLeave,\n            onMouseMove: boundOnMouseMove,\n            onClick: boundOnClick,\n        }\n    })\n}\n\n/**\n * Creates required layout to generate a funnel chart,\n * it uses almost the same parameters as the Funnel component.\n *\n * For purpose/constrains on the parameters, please have a look\n * at the component's props.\n */\nexport const useFunnel = <D extends FunnelDatum>({\n    data,\n    width,\n    height,\n    direction = defaults.direction,\n    interpolation = defaults.interpolation,\n    spacing = defaults.spacing,\n    shapeBlending: rawShapeBlending = defaults.shapeBlending,\n    valueFormat,\n    colors = defaults.colors,\n    fillOpacity = defaults.fillOpacity,\n    borderWidth = defaults.borderWidth,\n    borderColor = defaults.borderColor,\n    borderOpacity = defaults.borderOpacity,\n    labelColor = defaults.labelColor,\n    enableBeforeSeparators = defaults.enableBeforeSeparators,\n    beforeSeparatorLength = defaults.beforeSeparatorLength,\n    beforeSeparatorOffset = defaults.beforeSeparatorOffset,\n    enableAfterSeparators = defaults.enableAfterSeparators,\n    afterSeparatorLength = defaults.afterSeparatorLength,\n    afterSeparatorOffset = defaults.afterSeparatorOffset,\n    isInteractive = defaults.isInteractive,\n    currentPartSizeExtension = defaults.currentPartSizeExtension,\n    currentBorderWidth,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}: {\n    data: FunnelDataProps<D>['data']\n    width: number\n    height: number\n    direction?: FunnelCommonProps<D>['direction']\n    interpolation?: FunnelCommonProps<D>['interpolation']\n    spacing?: FunnelCommonProps<D>['spacing']\n    shapeBlending?: FunnelCommonProps<D>['shapeBlending']\n    valueFormat?: FunnelCommonProps<D>['valueFormat']\n    colors?: FunnelCommonProps<D>['colors']\n    fillOpacity?: FunnelCommonProps<D>['fillOpacity']\n    borderWidth?: FunnelCommonProps<D>['borderWidth']\n    borderColor?: FunnelCommonProps<D>['borderColor']\n    borderOpacity?: FunnelCommonProps<D>['borderOpacity']\n    labelColor?: FunnelCommonProps<D>['labelColor']\n    enableBeforeSeparators?: FunnelCommonProps<D>['enableBeforeSeparators']\n    beforeSeparatorLength?: FunnelCommonProps<D>['beforeSeparatorLength']\n    beforeSeparatorOffset?: FunnelCommonProps<D>['beforeSeparatorOffset']\n    enableAfterSeparators?: FunnelCommonProps<D>['enableAfterSeparators']\n    afterSeparatorLength?: FunnelCommonProps<D>['afterSeparatorLength']\n    afterSeparatorOffset?: FunnelCommonProps<D>['afterSeparatorOffset']\n    isInteractive?: FunnelCommonProps<D>['isInteractive']\n    currentPartSizeExtension?: FunnelCommonProps<D>['currentPartSizeExtension']\n    currentBorderWidth?: FunnelCommonProps<D>['currentBorderWidth']\n    onMouseEnter?: FunnelCommonProps<D>['onMouseEnter']\n    onMouseMove?: FunnelCommonProps<D>['onMouseMove']\n    onMouseLeave?: FunnelCommonProps<D>['onMouseLeave']\n    onClick?: FunnelCommonProps<D>['onClick']\n    tooltip?: (props: PartTooltipProps<D>) => JSX.Element\n}) => {\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<D>(colors, 'id')\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getLabelColor = useInheritedColor(labelColor, theme)\n\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const [areaGenerator, borderGenerator] = useMemo(\n        () => computeShapeGenerators<D>(interpolation, direction),\n        [interpolation, direction]\n    )\n\n    let innerWidth: number\n    let innerHeight: number\n    const paddingBefore = enableBeforeSeparators ? beforeSeparatorLength + beforeSeparatorOffset : 0\n    const paddingAfter = enableAfterSeparators ? afterSeparatorLength + afterSeparatorOffset : 0\n    if (direction === 'vertical') {\n        innerWidth = width - paddingBefore - paddingAfter\n        innerHeight = height\n    } else {\n        innerWidth = width\n        innerHeight = height - paddingBefore - paddingAfter\n    }\n\n    const [bandScale, linearScale] = useMemo(\n        () =>\n            computeScales<D>({\n                data,\n                direction,\n                width: innerWidth,\n                height: innerHeight,\n                spacing,\n            }),\n        [data, direction, innerWidth, innerHeight, spacing]\n    )\n\n    const [currentPartId, setCurrentPartId] = useState<string | number | null>(null)\n\n    const parts: FunnelPart<D>[] = useMemo(() => {\n        const enhancedParts = data.map((datum, index) => {\n            const isCurrent = datum.id === currentPartId\n\n            let partWidth\n            let partHeight\n            let y0, x0\n\n            if (direction === 'vertical') {\n                partWidth = linearScale(datum.value)\n                partHeight = bandScale.bandwidth\n                x0 = paddingBefore + (innerWidth - partWidth) * 0.5\n                y0 = bandScale(index)\n            } else {\n                partWidth = bandScale.bandwidth\n                partHeight = linearScale(datum.value)\n                x0 = bandScale(index)\n                y0 = paddingBefore + (innerHeight - partHeight) * 0.5\n            }\n\n            const x1 = x0 + partWidth\n            const x = x0 + partWidth * 0.5\n            const y1 = y0 + partHeight\n            const y = y0 + partHeight * 0.5\n\n            const part: FunnelPart<D> = {\n                data: datum,\n                width: partWidth,\n                height: partHeight,\n                color: getColor(datum),\n                fillOpacity,\n                borderWidth:\n                    isCurrent && currentBorderWidth !== undefined\n                        ? currentBorderWidth\n                        : borderWidth,\n                borderOpacity,\n                formattedValue: formatValue(datum.value),\n                isCurrent,\n                x,\n                x0,\n                x1,\n                y,\n                y0,\n                y1,\n                borderColor: '',\n                labelColor: '',\n                points: [],\n                areaPoints: [],\n                borderPoints: [],\n            }\n\n            part.borderColor = getBorderColor(part)\n            part.labelColor = getLabelColor(part)\n\n            return part\n        })\n\n        const shapeBlending = rawShapeBlending / 2\n\n        enhancedParts.forEach((part, index) => {\n            const nextPart = enhancedParts[index + 1]\n\n            if (direction === 'vertical') {\n                part.points.push({ x: part.x0, y: part.y0 })\n                part.points.push({ x: part.x1, y: part.y0 })\n                if (nextPart) {\n                    part.points.push({ x: nextPart.x1, y: part.y1 })\n                    part.points.push({ x: nextPart.x0, y: part.y1 })\n                } else {\n                    part.points.push({ x: part.points[1].x, y: part.y1 })\n                    part.points.push({ x: part.points[0].x, y: part.y1 })\n                }\n                if (part.isCurrent) {\n                    part.points[0].x -= currentPartSizeExtension\n                    part.points[1].x += currentPartSizeExtension\n                    part.points[2].x += currentPartSizeExtension\n                    part.points[3].x -= currentPartSizeExtension\n                }\n\n                part.areaPoints = [\n                    {\n                        x: 0,\n                        x0: part.points[0].x,\n                        x1: part.points[1].x,\n                        y: part.y0,\n                        y0: 0,\n                        y1: 0,\n                    },\n                ]\n                part.areaPoints.push({\n                    ...part.areaPoints[0],\n                    y: part.y0 + part.height * shapeBlending,\n                })\n                const lastAreaPoint = {\n                    x: 0,\n                    x0: part.points[3].x,\n                    x1: part.points[2].x,\n                    y: part.y1,\n                    y0: 0,\n                    y1: 0,\n                }\n                part.areaPoints.push({\n                    ...lastAreaPoint,\n                    y: part.y1 - part.height * shapeBlending,\n                })\n                part.areaPoints.push(lastAreaPoint)\n                ;[0, 1, 2, 3].map(index => {\n                    part.borderPoints.push({\n                        x: part.areaPoints[index].x0,\n                        y: part.areaPoints[index].y,\n                    })\n                })\n                part.borderPoints.push(null)\n                ;[3, 2, 1, 0].map(index => {\n                    part.borderPoints.push({\n                        x: part.areaPoints[index].x1,\n                        y: part.areaPoints[index].y,\n                    })\n                })\n            } else {\n                part.points.push({ x: part.x0, y: part.y0 })\n                if (nextPart) {\n                    part.points.push({ x: part.x1, y: nextPart.y0 })\n                    part.points.push({ x: part.x1, y: nextPart.y1 })\n                } else {\n                    part.points.push({ x: part.x1, y: part.y0 })\n                    part.points.push({ x: part.x1, y: part.y1 })\n                }\n                part.points.push({ x: part.x0, y: part.y1 })\n                if (part.isCurrent) {\n                    part.points[0].y -= currentPartSizeExtension\n                    part.points[1].y -= currentPartSizeExtension\n                    part.points[2].y += currentPartSizeExtension\n                    part.points[3].y += currentPartSizeExtension\n                }\n\n                part.areaPoints = [\n                    {\n                        x: part.x0,\n                        x0: 0,\n                        x1: 0,\n                        y: 0,\n                        y0: part.points[0].y,\n                        y1: part.points[3].y,\n                    },\n                ]\n                part.areaPoints.push({\n                    ...part.areaPoints[0],\n                    x: part.x0 + part.width * shapeBlending,\n                })\n                const lastAreaPoint = {\n                    x: part.x1,\n                    x0: 0,\n                    x1: 0,\n                    y: 0,\n                    y0: part.points[1].y,\n                    y1: part.points[2].y,\n                }\n                part.areaPoints.push({\n                    ...lastAreaPoint,\n                    x: part.x1 - part.width * shapeBlending,\n                })\n                part.areaPoints.push(lastAreaPoint)\n                ;[0, 1, 2, 3].map(index => {\n                    part.borderPoints.push({\n                        x: part.areaPoints[index].x,\n                        y: part.areaPoints[index].y0,\n                    })\n                })\n                part.borderPoints.push(null)\n                ;[3, 2, 1, 0].map(index => {\n                    part.borderPoints.push({\n                        x: part.areaPoints[index].x,\n                        y: part.areaPoints[index].y1,\n                    })\n                })\n            }\n        })\n\n        return enhancedParts\n    }, [\n        data,\n        direction,\n        linearScale,\n        bandScale,\n        innerWidth,\n        innerHeight,\n        paddingBefore,\n        paddingAfter,\n        rawShapeBlending,\n        getColor,\n        formatValue,\n        getBorderColor,\n        getLabelColor,\n        currentPartId,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const partsWithHandlers = useMemo(\n        () =>\n            computePartsHandlers<D>({\n                parts,\n                setCurrentPartId,\n                isInteractive,\n                onMouseEnter,\n                onMouseLeave,\n                onMouseMove,\n                onClick,\n                showTooltipFromEvent,\n                hideTooltip,\n                tooltip,\n            }),\n        [\n            parts,\n            setCurrentPartId,\n            isInteractive,\n            onMouseEnter,\n            onMouseLeave,\n            onMouseMove,\n            onClick,\n            showTooltipFromEvent,\n            hideTooltip,\n            tooltip,\n        ]\n    )\n\n    const [beforeSeparators, afterSeparators] = useMemo(\n        () =>\n            computeSeparators({\n                parts,\n                direction,\n                width,\n                height,\n                spacing,\n                enableBeforeSeparators,\n                beforeSeparatorOffset,\n                enableAfterSeparators,\n                afterSeparatorOffset,\n            }),\n        [\n            parts,\n            direction,\n            width,\n            height,\n            spacing,\n            enableBeforeSeparators,\n            beforeSeparatorOffset,\n            enableAfterSeparators,\n            afterSeparatorOffset,\n        ]\n    )\n\n    const customLayerProps: FunnelCustomLayerProps<D> = useMemo(\n        () => ({\n            width,\n            height,\n            parts: partsWithHandlers,\n            areaGenerator,\n            borderGenerator,\n            beforeSeparators,\n            afterSeparators,\n            setCurrentPartId,\n        }),\n        [\n            width,\n            height,\n            partsWithHandlers,\n            areaGenerator,\n            borderGenerator,\n            beforeSeparators,\n            afterSeparators,\n            setCurrentPartId,\n        ]\n    )\n\n    return {\n        parts: partsWithHandlers,\n        areaGenerator,\n        borderGenerator,\n        beforeSeparators,\n        afterSeparators,\n        setCurrentPartId,\n        currentPartId,\n        customLayerProps,\n    }\n}\n\nexport const useFunnelAnnotations = <D extends FunnelDatum>(\n    parts: FunnelPart<D>[],\n    annotations: FunnelCommonProps<D>['annotations']\n) =>\n    useAnnotations<FunnelPart<D>>({\n        data: parts,\n        annotations,\n        getPosition: part => ({\n            x: part.x,\n            y: part.y,\n        }),\n        getDimensions: (part: FunnelPart<D>) => {\n            const width = part.width\n            const height = part.height\n\n            return { size: Math.max(width, height), width, height }\n        },\n    })\n","import { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport {\n    FunnelDatum,\n    FunnelPartWithHandlers,\n    FunnelAreaGenerator,\n    FunnelBorderGenerator,\n} from './types'\n\nexport interface PartProps<D extends FunnelDatum> {\n    part: FunnelPartWithHandlers<D>\n    areaGenerator: FunnelAreaGenerator\n    borderGenerator: FunnelBorderGenerator\n}\n\nexport const Part = <D extends FunnelDatum>({\n    part,\n    areaGenerator,\n    borderGenerator,\n}: PartProps<D>) => {\n    const { animate, config: motionConfig } = useMotionConfig()\n\n    const animatedAreaPath = useAnimatedPath(areaGenerator(part.areaPoints) as string)\n    const animatedBorderPath = useAnimatedPath(borderGenerator(part.borderPoints) as string)\n    const animatedProps = useSpring({\n        areaColor: part.color,\n        borderWidth: part.borderWidth,\n        borderColor: part.borderColor,\n        config: motionConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {part.borderWidth > 0 && (\n                <animated.path\n                    d={animatedBorderPath}\n                    stroke={animatedProps.borderColor}\n                    strokeWidth={animatedProps.borderWidth}\n                    strokeOpacity={part.borderOpacity}\n                    fill=\"none\"\n                />\n            )}\n            <animated.path\n                d={animatedAreaPath}\n                fill={animatedProps.areaColor}\n                fillOpacity={part.fillOpacity}\n                onMouseEnter={part.onMouseEnter}\n                onMouseLeave={part.onMouseLeave}\n                onMouseMove={part.onMouseMove}\n                onClick={part.onClick}\n            />\n        </>\n    )\n}\n","import { Part } from './Part'\nimport {\n    FunnelPartWithHandlers,\n    FunnelAreaGenerator,\n    FunnelBorderGenerator,\n    FunnelDatum,\n} from './types'\n\ninterface PartsProps<D extends FunnelDatum> {\n    parts: FunnelPartWithHandlers<D>[]\n    areaGenerator: FunnelAreaGenerator\n    borderGenerator: FunnelBorderGenerator\n}\n\nexport const Parts = <D extends FunnelDatum>({\n    parts,\n    areaGenerator,\n    borderGenerator,\n}: PartsProps<D>) => (\n    <>\n        {parts.map(part => (\n            <Part<D>\n                key={part.data.id}\n                part={part}\n                areaGenerator={areaGenerator}\n                borderGenerator={borderGenerator}\n            />\n        ))}\n    </>\n)\n","import { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { FunnelDatum, FunnelPart } from './types'\n\ninterface PartLabelProps<D extends FunnelDatum> {\n    part: FunnelPart<D>\n}\n\nexport const PartLabel = <D extends FunnelDatum>({ part }: PartLabelProps<D>) => {\n    const theme = useTheme()\n    const { animate, config: motionConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${part.x}, ${part.y})`,\n        color: part.labelColor,\n        config: motionConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform}>\n            <animated.text\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: animatedProps.color,\n                    pointerEvents: 'none',\n                }}\n            >\n                {part.formattedValue}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import { PartLabel } from './PartLabel'\nimport { FunnelDatum, FunnelPart } from './types'\n\ninterface PartLabelsProps<D extends FunnelDatum> {\n    parts: FunnelPart<D>[]\n}\n\nexport const PartLabels = <D extends FunnelDatum>({ parts }: PartLabelsProps<D>) => (\n    <>\n        {parts.map(part => (\n            <PartLabel key={part.data.id} part={part} />\n        ))}\n    </>\n)\n","import { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { SeparatorProps as SeparatorType } from './types'\n\ninterface SeparatorProps {\n    separator: SeparatorType\n}\n\nexport const Separator = ({ separator }: SeparatorProps) => {\n    const theme = useTheme()\n    const { animate, config: motionConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x1: separator.x0,\n        x2: separator.x1,\n        y1: separator.y0,\n        y2: separator.y1,\n        config: motionConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.line\n            x1={animatedProps.x1}\n            x2={animatedProps.x2}\n            y1={animatedProps.y1}\n            y2={animatedProps.y2}\n            fill=\"none\"\n            {...(theme.grid.line as any)}\n        />\n    )\n}\n","import { Separator } from './Separator'\nimport { SeparatorProps as SeparatorType } from './types'\n\ninterface SeparatorsProps {\n    beforeSeparators: SeparatorType[]\n    afterSeparators: SeparatorType[]\n}\n\nexport const Separators = ({ beforeSeparators, afterSeparators }: SeparatorsProps) => (\n    <>\n        {beforeSeparators.map(separator => (\n            <Separator key={separator.partId} separator={separator} />\n        ))}\n        {afterSeparators.map(separator => (\n            <Separator key={separator.partId} separator={separator} />\n        ))}\n    </>\n)\n","import { Annotation } from '@nivo/annotations'\nimport { useFunnelAnnotations } from './hooks'\nimport { FunnelDatum, FunnelPart } from './types'\n\ninterface FunnelAnnotationsProps<D extends FunnelDatum> {\n    parts: FunnelPart<D>[]\n    annotations: any[]\n}\n\nexport const FunnelAnnotations = <D extends FunnelDatum>({\n    parts,\n    annotations,\n}: FunnelAnnotationsProps<D>) => {\n    const boundAnnotations = useFunnelAnnotations<D>(parts, annotations)\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport { SvgWrapper, Container, useDimensions } from '@nivo/core'\nimport { svgDefaultProps } from './props'\nimport { useFunnel } from './hooks'\nimport { Parts } from './Parts'\nimport { PartLabels } from './PartLabels'\nimport { Separators } from './Separators'\nimport { FunnelAnnotations } from './FunnelAnnotations'\nimport { FunnelDatum, FunnelLayerId, FunnelSvgProps } from './types'\n\ntype InnerFunnelProps<D extends FunnelDatum> = Omit<\n    FunnelSvgProps<D>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerFunnel = <D extends FunnelDatum>({\n    data,\n    width,\n    height,\n    margin: partialMargin,\n    direction = svgDefaultProps.direction,\n    interpolation = svgDefaultProps.interpolation,\n    spacing = svgDefaultProps.spacing,\n    shapeBlending = svgDefaultProps.shapeBlending,\n    valueFormat,\n    colors = svgDefaultProps.colors,\n    fillOpacity = svgDefaultProps.fillOpacity,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor = svgDefaultProps.borderColor,\n    borderOpacity = svgDefaultProps.borderOpacity,\n    enableLabel = svgDefaultProps.enableLabel,\n    labelColor = svgDefaultProps.labelColor,\n    enableBeforeSeparators = svgDefaultProps.enableBeforeSeparators,\n    beforeSeparatorLength = svgDefaultProps.beforeSeparatorLength,\n    beforeSeparatorOffset = svgDefaultProps.beforeSeparatorOffset,\n    enableAfterSeparators = svgDefaultProps.enableAfterSeparators,\n    afterSeparatorLength = svgDefaultProps.afterSeparatorLength,\n    afterSeparatorOffset = svgDefaultProps.afterSeparatorOffset,\n    layers = svgDefaultProps.layers,\n    annotations = svgDefaultProps.annotations,\n    isInteractive = svgDefaultProps.isInteractive,\n    currentPartSizeExtension = svgDefaultProps.currentPartSizeExtension,\n    currentBorderWidth,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerFunnelProps<D>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        areaGenerator,\n        borderGenerator,\n        parts,\n        beforeSeparators,\n        afterSeparators,\n        customLayerProps,\n    } = useFunnel<D>({\n        data,\n        width: innerWidth,\n        height: innerHeight,\n        direction,\n        interpolation,\n        spacing,\n        shapeBlending,\n        valueFormat,\n        colors,\n        fillOpacity,\n        borderWidth,\n        borderColor,\n        borderOpacity,\n        labelColor,\n        enableBeforeSeparators,\n        beforeSeparatorLength,\n        beforeSeparatorOffset,\n        enableAfterSeparators,\n        afterSeparatorLength,\n        afterSeparatorOffset,\n        isInteractive,\n        currentPartSizeExtension,\n        currentBorderWidth,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    })\n\n    const layerById: Record<FunnelLayerId, ReactNode> = {\n        separators: null,\n        parts: null,\n        annotations: null,\n        labels: null,\n    }\n\n    if (layers.includes('separators')) {\n        layerById.separators = (\n            <Separators\n                key=\"separators\"\n                beforeSeparators={beforeSeparators}\n                afterSeparators={afterSeparators}\n            />\n        )\n    }\n\n    if (layers.includes('parts')) {\n        layerById.parts = (\n            <Parts<D>\n                key=\"parts\"\n                parts={parts}\n                areaGenerator={areaGenerator}\n                borderGenerator={borderGenerator}\n            />\n        )\n    }\n\n    if (layers?.includes('annotations')) {\n        layerById.annotations = (\n            <FunnelAnnotations<D> key=\"annotations\" parts={parts} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('labels') && enableLabel) {\n        layerById.labels = <PartLabels<D> key=\"labels\" parts={parts} />\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Funnel = <D extends FunnelDatum = FunnelDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: FunnelSvgProps<D>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerFunnel<D> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { FunnelDatum, FunnelSvgProps } from './types'\nimport { Funnel } from './Funnel'\n\nexport const ResponsiveFunnel = <D extends FunnelDatum = FunnelDatum>(\n    props: Omit<FunnelSvgProps<D>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Funnel<D> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import React, {useState} from \"react\";\nimport PropTypes from 'prop-types'\nimport { ResponsiveFunnel } from \"@nivo/funnel\";\nimport { CButton, CButtonGroup, CCard, CCardBody, CCardHeader, CCol, CHeader, CRow } from '@coreui/react'\nimport {SchemeOptions} from './ColorSchemeOptions'\nimport Select from \"react-select\"\n\nconst NivoFunnel = () => {\n    const [colorScheme, setColorScheme] = useState('spectral')\n    const [vertOrHor, setVertOrHor] = useState('vertical')\n\n    const funnelData = [\n        {\n          \"id\": \"step_sent\",\n          \"value\": 72053,\n          \"label\": \"Sent\"\n        },\n        {\n          \"id\": \"step_viewed\",\n          \"value\": 49434,\n          \"label\": \"Viewed\"\n        },\n        {\n          \"id\": \"step_clicked\",\n          \"value\": 41686,\n          \"label\": \"Clicked\"\n        },\n        {\n          \"id\": \"step_add_to_card\",\n          \"value\": 37960,\n          \"label\": \"Add To Card\"\n        },\n        {\n          \"id\": \"step_purchased\",\n          \"value\": 32094,\n          \"label\": \"Purchased\"\n        }\n      ]\n\n\n    const MyResponsiveFunnel = ({ data, colorScheme, vertOrHor}) => (\n        <ResponsiveFunnel\n            data={data}\n            margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n            direction={vertOrHor}\n            interpolation=\"smooth\"\n            valueFormat=\">-.4s\"\n            colors={{ scheme: colorScheme }}\n            fillOpacity={0.95}\n            borderWidth={7}\n            labelColor={{\n                from: 'color',\n                modifiers: [\n                    [\n                        'darker',\n                        3\n                    ]\n                ]\n            }}\n            beforeSeparatorLength={100}\n            beforeSeparatorOffset={20}\n            afterSeparatorLength={100}\n            afterSeparatorOffset={20}\n            currentPartSizeExtension={10}\n            currentBorderWidth={40}\n            motionConfig=\"wobbly\"\n        />\n    )\n\n    MyResponsiveFunnel.propTypes = {\n        data: PropTypes.object.isRequired,\n        colorScheme: PropTypes.string.isRequired,\n        vertOrHor:PropTypes.string.isRequired\n    } \n\n    const formatSelectOptions = ({value, label, colors}) => (\n        <div style={{display: 'flex'}}>\n            <div style={{minWidth:'80px'}}>{label}</div>\n            <div style={{alignItems:'end'}}>\n                {\n                    colors.map( (colorValue) => {\n                        return(\n                            <span key={colorValue} style={{backgroundColor:colorValue}}>\n                                &nbsp;&nbsp;\n                            </span>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n\n    const handleChange = (selectedOption) => {\n        setColorScheme(selectedOption.value)\n    }\n\n    const CustomSelectOptions = () => (\n        <Select\n            formatOptionLabel={formatSelectOptions}\n            defaultValue={Object.values(SchemeOptions)[0]}\n            options={Object.values(SchemeOptions)}\n            onChange={handleChange}\n        />\n    )\n\n    return(\n        <>\n            <CCard>\n                <CCardHeader>\n                    <CRow>\n                        <CCol sm={6}>\n                        <h4>Funnel Graph</h4>\n                        </CCol>\n                        <CCol sm={3}>\n                            <CButtonGroup>\n                                {['horizontal', 'vertical'].map( (value) => (\n                                    <CButton \n                                    color='outline-secondary'\n                                    active={value === vertOrHor}\n                                    onClick={() => setVertOrHor(value.toLowerCase())}\n                                    key={value}>\n                                        {value}\n                                    </CButton>\n                                ))}\n                            </CButtonGroup>\n                        </CCol>\n                        <CCol sm={3}>\n                            <CustomSelectOptions />\n                        </CCol>\n                    </CRow>                \n                </CCardHeader>\n                <CCardBody style={{height:'600px'}}>\n                    <MyResponsiveFunnel \n                        colorScheme={colorScheme}\n                        vertOrHor={vertOrHor}\n                        data={funnelData} />\n                </CCardBody>    \n            </CCard>    \n        </>\n    )\n\n}\nexport default NivoFunnel;\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n"],"names":["SchemeOptions","value","label","colors","svgDefaultProps","layers","direction","interpolation","spacing","shapeBlending","scheme","fillOpacity","borderWidth","borderColor","from","borderOpacity","enableLabel","labelColor","theme","enableBeforeSeparators","beforeSeparatorLength","beforeSeparatorOffset","enableAfterSeparators","afterSeparatorLength","afterSeparatorOffset","annotations","isInteractive","currentPartSizeExtension","role","animate","MotionConfigProvider","motionConfig","PartTooltip","part","_jsx","BasicTooltip","id","data","formattedValue","color","enableChip","computePartsHandlers","parts","setCurrentPartId","onMouseEnter","onMouseLeave","onMouseMove","onClick","showTooltipFromEvent","hideTooltip","tooltip","map","event","createElement","useFunnel","innerWidth","innerHeight","width","height","defaults","rawShapeBlending","valueFormat","currentBorderWidth","useTheme","getColor","useOrdinalColorScale","getBorderColor","useInheritedColor","getLabelColor","formatValue","useValueFormatter","useMemo","areaGenerator","area","curve","curveBasis","curveLinear","x0","d","x1","y","y0","y1","x","line","defined","computeShapeGenerators","borderGenerator","paddingBefore","paddingAfter","bandScaleSize","linearScaleSize","bandwidth","length","bandScale","index","allValues","scaleLinear","domain","Math","max","range","computeScales","linearScale","useState","currentPartId","enhancedParts","datum","partWidth","partHeight","isCurrent","points","areaPoints","borderPoints","forEach","nextPart","push","lastAreaPoint","useTooltip","partsWithHandlers","beforeSeparators","afterSeparators","lastPart","partId","computeSeparators","customLayerProps","Part","useMotionConfig","config","animatedAreaPath","useAnimatedPath","animatedBorderPath","animatedProps","useSpring","areaColor","immediate","_jsxs","animated","path","stroke","strokeWidth","strokeOpacity","fill","Parts","PartLabel","transform","g","text","textAnchor","dominantBaseline","style","labels","pointerEvents","children","PartLabels","Separator","separator","x2","y2","grid","Separators","FunnelAnnotations","boundAnnotations","useAnnotations","getPosition","getDimensions","size","useFunnelAnnotations","annotation","i","Annotation","InnerFunnel","partialMargin","margin","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","outerWidth","outerHeight","layerById","separators","includes","SvgWrapper","layer","Fragment","Funnel","renderWrapper","otherProps","Container","ResponsiveFunnel","props","ResponsiveWrapper","colorScheme","setColorScheme","vertOrHor","setVertOrHor","MyResponsiveFunnel","top","right","bottom","left","modifiers","formatSelectOptions","display","minWidth","alignItems","colorValue","backgroundColor","handleChange","selectedOption","CustomSelectOptions","formatOptionLabel","defaultValue","Object","values","options","onChange","CCard","CCardHeader","CRow","CCol","sm","CButtonGroup","CButton","active","toLowerCase","CCardBody","pi","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","prototype","constructor","moveTo","closePath","lineTo","quadraticCurveTo","bezierCurveTo","arcTo","r","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","pointX","constant","pointY","context","output","j","k","buffer","n","defined0","x0z","Array","y0z","areaStart","lineStart","lineEnd","point","areaEnd","arealine","arguments","lineX0","lineY0","lineY1","lineX1","p"],"sourceRoot":""}