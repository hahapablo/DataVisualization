{"version":3,"file":"static/js/26.09d1f96c.chunk.js","mappings":"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","sources":["views/nivo/ColorSchemeOptions.js","../node_modules/@nivo/bullet/src/BulletMarkersItem.tsx","../node_modules/@nivo/bullet/src/BulletRectsItem.tsx","../node_modules/@nivo/bullet/src/props.ts","../node_modules/@nivo/bullet/src/BulletTooltip.tsx","../node_modules/@nivo/bullet/src/compute.ts","../node_modules/@nivo/bullet/src/BulletMarkers.tsx","../node_modules/@nivo/bullet/src/BulletRects.tsx","../node_modules/@nivo/bullet/src/BulletItem.tsx","../node_modules/@nivo/bullet/src/Bullet.tsx","../node_modules/@nivo/bullet/src/hooks.ts","../node_modules/@nivo/bullet/src/ResponsiveBullet.tsx","views/nivo/NivoBullet.js"],"sourcesContent":["export const SchemeOptions = [\n    {value: 'nivo', label: 'Nivo', colors: ['#ff0000', '#234535']},\n    {value: 'reds', label: 'Reds', colors: ['#00FF00','#236456']},\n    {value: 'blues', label: 'Blues', colors: ['#00FFFF', '#572535']},\n    {value: 'spectral', label: 'Spectral', colors: ['#0FFFF0', '#765436']},\n    {value: 'accent', label: 'Accent', colors: ['#11FF22', '#124535']},\n    {value: 'paired', label: 'Paired', colors: ['#FF2344', '#875797']},\n]\n","import { BulletMarkersItemProps } from './types'\nimport { animated } from '@react-spring/web'\n\nexport const BulletMarkersItem = ({\n    animatedProps: { color, transform, x, y1, y2 },\n    data,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}: BulletMarkersItemProps) => {\n    return (\n        <animated.line\n            transform={transform}\n            x1={x}\n            x2={x}\n            y1={y1}\n            y2={y2}\n            fill=\"none\"\n            stroke={color}\n            strokeWidth=\"5\"\n            onMouseMove={event => onMouseMove(data, event)}\n            onMouseEnter={event => onMouseEnter(data, event)}\n            onMouseLeave={event => onMouseLeave(data, event)}\n            onClick={event => onClick(data, event)}\n        />\n    )\n}\n","import { BulletRectsItemProps } from './types'\nimport { animated, to } from '@react-spring/web'\n\nexport const BulletRectsItem = ({\n    animatedProps: { x, y, width, height, color },\n    borderColor,\n    borderWidth,\n    data,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}: BulletRectsItemProps) => {\n    return (\n        <animated.rect\n            x={x}\n            y={y}\n            width={to(width, value => Math.max(value, 0))}\n            height={to(height, value => Math.max(value, 0))}\n            fill={color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            onMouseMove={event => onMouseMove(data, event)}\n            onMouseEnter={event => onMouseEnter(data, event)}\n            onMouseLeave={event => onMouseLeave(data, event)}\n            onClick={event => onClick(data, event)}\n        />\n    )\n}\n","import { BulletMarkersItem } from './BulletMarkersItem'\nimport { BulletRectsItem } from './BulletRectsItem'\nimport { motionDefaultProps, defaultMargin } from '@nivo/core'\nimport { BulletTooltip } from './BulletTooltip'\n\nexport const defaultProps = {\n    layout: 'horizontal',\n    reverse: false,\n    spacing: 30,\n    minValue: 0,\n    maxValue: 'auto',\n    axisPosition: 'after',\n    titlePosition: 'before',\n    titleAlign: 'middle',\n    titleRotation: 0,\n    titleOffsetX: 0,\n    titleOffsetY: 0,\n    rangeComponent: BulletRectsItem,\n    rangeColors: 'seq:cool',\n    measureComponent: BulletRectsItem,\n    measureColors: 'seq:red_purple',\n    markers: [],\n    markerComponent: BulletMarkersItem,\n    markerColors: 'seq:red_purple',\n    rangeBorderWidth: 0,\n    rangeBorderColor: { from: 'color' },\n    measureSize: 0.4,\n    measureBorderWidth: 0,\n    measureBorderColor: { from: 'color' },\n    markerSize: 0.6,\n    isInteractive: true,\n    tooltip: BulletTooltip,\n    animate: motionDefaultProps.animate,\n    motionConfig: motionDefaultProps.config,\n    margin: defaultMargin,\n    role: 'img',\n} as const\n","import { BulletTooltipProps } from './types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nexport const BulletTooltip = ({ color, v0, v1 }: BulletTooltipProps) => {\n    return (\n        <BasicTooltip\n            id={\n                v1 ? (\n                    <span>\n                        <strong>{v0}</strong> to <strong>{v1}</strong>\n                    </span>\n                ) : (\n                    <strong>{v0}</strong>\n                )\n            }\n            enableChip={true}\n            color={color}\n        />\n    )\n}\n","import { BulletItemProps, BulletRectsProps, ComputedRangeDatum } from './types'\n// @ts-ignore\nimport { getColorScale } from '@nivo/core'\n\ntype ComputeRect = Pick<BulletRectsProps, 'layout' | 'reverse' | 'scale' | 'height'>\n\nexport const stackValues = (\n    values: number[],\n    scale: BulletItemProps['scale'],\n    colorScale: ReturnType<getColorScale>,\n    type: 'range' | 'measures',\n    useAverage = false\n) => {\n    const [min, max] = scale.domain()\n    const normalized = [...values, type === 'measures' || values.includes(max) ? 0 : max]\n        .filter(v => v !== 0)\n        .sort((a, b) => a - b)\n\n    return normalized.reduce<ComputedRangeDatum[]>((acc, v1, index) => {\n        const [last] = acc.slice(-1)\n        const v0 = last?.v1 ?? min\n        const sequentialValue = useAverage === true ? v0 + (v1 - v0) / 2 : v1\n\n        return [\n            ...acc,\n            {\n                index,\n                v0,\n                v1,\n                color: colorScale(colorScale.type === 'sequential' ? sequentialValue : index),\n            },\n        ]\n    }, [])\n}\n\nexport const getComputeRect = ({ layout, reverse, scale, height }: ComputeRect) => {\n    if (layout === 'horizontal') {\n        if (reverse === true) {\n            return (d: ComputedRangeDatum) => {\n                const x = scale(d.v1)\n                const w = scale(d.v0) - x\n\n                return { x, y: 0, width: w, height }\n            }\n        }\n\n        return (d: ComputedRangeDatum) => {\n            const x = scale(d.v0)\n            const w = scale(d.v1) - x\n\n            return { x, y: 0, width: w, height }\n        }\n    }\n\n    if (reverse === true) {\n        return (d: ComputedRangeDatum) => {\n            const y = scale(d.v0)\n            const h = scale(d.v1) - y\n\n            return { x: 0, y, width: height, height: h }\n        }\n    }\n\n    return (d: ComputedRangeDatum) => {\n        const y = scale(d.v1)\n        const h = scale(d.v0) - y\n\n        return { x: 0, y, width: height, height: h }\n    }\n}\n\nexport const computeRects = ({\n    data,\n    layout,\n    reverse,\n    scale,\n    height,\n}: Pick<BulletRectsProps, 'data'> & ComputeRect) => {\n    const computeRect = getComputeRect({\n        layout,\n        reverse,\n        scale,\n        height,\n    })\n\n    return data.map(d => ({\n        data: d,\n        ...computeRect(d),\n    }))\n}\n","import { useMemo } from 'react'\nimport * as React from 'react'\nimport { useTransition } from '@react-spring/web'\n// @ts-ignore\nimport { useMotionConfig } from '@nivo/core'\nimport {\n    BulletMarkersProps,\n    ComputedMarkersDatum,\n    MarkerWithPosition,\n    PositionWithColor,\n} from './types'\n\ntype MouseEventWithDatum = (\n    datum: ComputedMarkersDatum,\n    event: React.MouseEvent<SVGLineElement, MouseEvent>\n) => void\n\ntype EventHandlers = Record<'onMouseEnter' | 'onMouseLeave' | 'onClick', MouseEventWithDatum>\n\nconst getPositionGenerator = ({\n    layout,\n    reverse,\n    scale,\n    height,\n    markerSize,\n}: Pick<BulletMarkersProps, 'layout' | 'reverse' | 'scale' | 'height' | 'markerSize'>) => {\n    if (layout === 'horizontal') {\n        return (marker: ComputedMarkersDatum) => {\n            const x = scale(marker.value)\n            const y = height / 2\n            const rotation = reverse === true ? 180 : 0\n\n            return { x, y, size: markerSize, rotation }\n        }\n    }\n\n    return (marker: ComputedMarkersDatum) => {\n        const x = height / 2\n        const y = scale(marker.value)\n        const rotation = reverse === true ? 270 : 90\n\n        return { x, y, size: markerSize, rotation }\n    }\n}\n\nexport const BulletMarkers = ({\n    scale,\n    layout,\n    reverse,\n    markers,\n    height,\n    markerSize,\n    component,\n    onMouseEnter,\n    onMouseLeave,\n    onClick,\n}: BulletMarkersProps & EventHandlers) => {\n    const getPosition = useMemo(\n        () => getPositionGenerator({ layout, reverse, scale, height, markerSize }),\n        [layout, reverse, scale, height, markerSize]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const transition = useTransition<MarkerWithPosition, PositionWithColor>(\n        markers.map(marker => ({ ...marker, position: getPosition(marker) })),\n        {\n            keys: marker => `${marker.index}`,\n            enter: ({ color, position }: MarkerWithPosition) => ({\n                color,\n                transform: `rotate(${position.rotation}, ${position.x}, ${position.y})`,\n                x: position.x,\n                y1: position.y - position.size / 2,\n                y2: position.y + position.size / 2,\n            }),\n            update: ({ color, position }: MarkerWithPosition) => ({\n                color,\n                transform: `rotate(${position.rotation}, ${position.x}, ${position.y})`,\n                x: position.x,\n                y1: position.y - position.size / 2,\n                y2: position.y + position.size / 2,\n            }),\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <>\n            {transition((props, { position, ...marker }) =>\n                React.createElement(component, {\n                    key: marker.index,\n                    ...marker,\n                    ...position,\n                    animatedProps: props,\n                    data: marker,\n                    onMouseEnter,\n                    onMouseMove: onMouseEnter,\n                    onMouseLeave,\n                    onClick,\n                })\n            )}\n        </>\n    )\n}\n","import { createElement, useMemo } from 'react'\nimport { useTransition, animated, to } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { computeRects } from './compute'\nimport { BulletRectsProps, BulletRectComputedRect, BulletRectAnimatedProps } from './types'\nimport { useInheritedColor } from '@nivo/colors'\n\nexport const BulletRects = ({\n    animatedProps,\n    data,\n    layout,\n    y,\n    borderColor,\n    borderWidth,\n    component,\n    reverse,\n    scale,\n    height,\n    onMouseEnter,\n    onMouseLeave,\n    onClick,\n}: BulletRectsProps) => {\n    const rects = useMemo(\n        () =>\n            computeRects({\n                data,\n                layout,\n                reverse,\n                scale,\n                height,\n            }),\n        [data, layout, reverse, scale, height]\n    )\n\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor(borderColor, theme)\n\n    const getTransform = (value: number) =>\n        `translate(${layout === 'horizontal' ? 0 : value},${layout === 'horizontal' ? value : 0})`\n\n    const transform = animatedProps ? to(animatedProps.measuresY, getTransform) : getTransform(y)\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const transition = useTransition<BulletRectComputedRect, BulletRectAnimatedProps>(rects, {\n        keys: rect => `${rect.data.index}`,\n        enter: rect => ({\n            x: rect.x,\n            y: rect.y,\n            width: rect.width,\n            height: rect.height,\n            color: rect.data.color,\n        }),\n        update: rect => ({\n            x: rect.x,\n            y: rect.y,\n            width: rect.width,\n            height: rect.height,\n            color: rect.data.color,\n        }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={transform}>\n            {transition((props, rect) =>\n                createElement(component, {\n                    key: rect.data.index,\n                    index: rect.data.index,\n                    animatedProps: props,\n                    data: rect.data,\n                    x: props.x.get(),\n                    y: props.y.get(),\n                    borderColor: getBorderColor(rect.data),\n                    borderWidth,\n                    width: to(props.width, value => Math.max(value, 0)).get(),\n                    height: to(props.height, value => Math.max(value, 0)).get(),\n                    color: props.color.get(),\n                    onMouseEnter,\n                    onMouseMove: onMouseEnter,\n                    onMouseLeave,\n                    onClick,\n                })\n            )}\n        </animated.g>\n    )\n}\n","import { useMemo } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { Axis } from '@nivo/axes'\n// @ts-ignore\nimport { getColorScale, useMotionConfig, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { stackValues } from './compute'\nimport { BulletMarkers } from './BulletMarkers'\nimport { BulletRects } from './BulletRects'\nimport { BulletItemProps } from './types'\n\nexport const BulletItem = ({\n    id,\n\n    scale,\n    layout,\n    reverse,\n    axisPosition,\n    x,\n    y,\n    width,\n    height,\n\n    title = id,\n    titlePosition,\n    titleAlign,\n    titleOffsetX,\n    titleOffsetY,\n    titleRotation,\n    tooltip,\n\n    rangeBorderColor,\n    rangeBorderWidth,\n    rangeComponent,\n    rangeColors,\n    ranges,\n\n    measureBorderColor,\n    measureBorderWidth,\n    measureComponent,\n    measureHeight,\n    measureColors,\n    measures,\n\n    markerComponent,\n    markerColors,\n    markerHeight,\n    markers = [],\n\n    onRangeClick,\n    onMeasureClick,\n    onMarkerClick,\n}: BulletItemProps) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const computedRanges = useMemo(() => {\n        const rangeColorScale = getColorScale(rangeColors, scale, true)\n\n        return stackValues(ranges, scale, rangeColorScale, 'range')\n    }, [rangeColors, ranges, scale])\n\n    const computedMeasures = useMemo(() => {\n        const measureColorScale = getColorScale(measureColors, scale)\n\n        return stackValues(measures, scale, measureColorScale, 'measures')\n    }, [measureColors, measures, scale])\n\n    const computedMarkers = useMemo(() => {\n        const markerColorScale = getColorScale(markerColors, scale)\n\n        return markers.map((marker: number, index: number) => ({\n            value: marker,\n            index,\n            color: markerColorScale(\n                markerColorScale.type === 'sequential' ? marker : index\n            ) as string,\n        }))\n    }, [markerColors, markers, scale])\n\n    const TooltipComponent = tooltip\n\n    const rangeNodes = (\n        <BulletRects\n            data={computedRanges}\n            scale={scale}\n            layout={layout}\n            reverse={reverse}\n            x={0}\n            y={0}\n            width={width}\n            height={height}\n            component={rangeComponent}\n            borderColor={rangeBorderColor}\n            borderWidth={rangeBorderWidth}\n            onMouseEnter={(range, event) => {\n                showTooltipFromEvent(\n                    <TooltipComponent color={range.color} v0={range.v0} v1={range.v1} />,\n                    event\n                )\n            }}\n            onMouseLeave={hideTooltip}\n            onClick={(range, event) => {\n                onRangeClick?.({ id, ...range }, event)\n            }}\n        />\n    )\n\n    const markerNodes = (\n        <BulletMarkers\n            markers={computedMarkers}\n            scale={scale}\n            layout={layout}\n            reverse={reverse}\n            height={height}\n            markerSize={markerHeight}\n            component={markerComponent}\n            onMouseEnter={(marker, event) => {\n                showTooltipFromEvent(\n                    <TooltipComponent color={marker.color} v0={marker.value} />,\n                    event\n                )\n            }}\n            onMouseLeave={hideTooltip}\n            onClick={(marker, event) => {\n                onMarkerClick?.({ id, ...marker }, event)\n            }}\n        />\n    )\n\n    const axisX = layout === 'vertical' && axisPosition === 'after' ? height : 0\n    const axisY = layout === 'horizontal' && axisPosition === 'after' ? height : 0\n\n    const axis = (\n        <g transform={`translate(${axisX},${axisY})`}>\n            <Axis\n                axis={layout === 'horizontal' ? 'x' : 'y'}\n                length={layout === 'horizontal' ? width : height}\n                scale={scale}\n                ticksPosition={axisPosition}\n            />\n        </g>\n    )\n\n    const titleX =\n        layout === 'horizontal'\n            ? titlePosition === 'before'\n                ? titleOffsetX\n                : width + titleOffsetX\n            : height / 2 + titleOffsetX\n    const titleY =\n        layout === 'horizontal'\n            ? height / 2 + titleOffsetY\n            : titlePosition === 'before'\n            ? titleOffsetY\n            : width + titleOffsetY\n\n    const titleNode = (\n        <g transform={`translate(${titleX},${titleY}) rotate(${titleRotation})`}>\n            {typeof title === 'string' ? (\n                <text\n                    style={{\n                        ...theme?.labels?.text,\n                        dominantBaseline: 'central',\n                        textAnchor: titleAlign,\n                    }}\n                >\n                    {title}\n                </text>\n            ) : (\n                title\n            )}\n        </g>\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        measuresY: (height - measureHeight) / 2,\n        transform: `translate(${x},${y})`,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform}>\n            {rangeNodes}\n            <BulletRects\n                animatedProps={animatedProps}\n                data={computedMeasures}\n                scale={scale}\n                layout={layout}\n                reverse={reverse}\n                x={0}\n                y={0}\n                width={width}\n                height={measureHeight}\n                component={measureComponent}\n                borderColor={measureBorderColor}\n                borderWidth={measureBorderWidth}\n                onMouseEnter={(measure, event) => {\n                    showTooltipFromEvent(\n                        <TooltipComponent color={measure.color} v0={measure.v1} />,\n                        event\n                    )\n                }}\n                onMouseLeave={hideTooltip}\n                onClick={(measure, event) => {\n                    onMeasureClick?.({ id, ...measure }, event)\n                }}\n            />\n            {axis}\n            {markerNodes}\n            {titleNode}\n        </animated.g>\n    )\n}\n","import { Container, SvgWrapper, useDimensions } from '@nivo/core'\nimport { defaultProps } from './props'\nimport { BulletSvgProps } from './types'\nimport { BulletItem } from './BulletItem'\nimport { useEnhancedData } from './hooks'\n\nexport const Bullet = (props: BulletSvgProps) => {\n    const {\n        data,\n\n        layout,\n        spacing,\n        measureSize,\n        markerSize,\n        reverse,\n        axisPosition,\n\n        minValue,\n        maxValue,\n\n        margin: partialMargin,\n        width,\n        height,\n\n        titlePosition,\n        titleAlign,\n        titleOffsetX,\n        titleOffsetY,\n        titleRotation,\n\n        rangeBorderColor,\n        rangeBorderWidth,\n        rangeComponent,\n        rangeColors,\n\n        measureBorderColor,\n        measureBorderWidth,\n        measureComponent,\n        measureColors,\n\n        markerComponent,\n        markerColors,\n\n        theme,\n        tooltip = defaultProps.tooltip,\n\n        animate,\n        motionConfig,\n\n        isInteractive,\n        onRangeClick,\n        onMeasureClick,\n        onMarkerClick,\n\n        role,\n    } = { ...defaultProps, ...props }\n\n    const { margin, innerWidth, innerHeight } = useDimensions(width, height, partialMargin)\n\n    const itemHeight =\n        layout === 'horizontal'\n            ? (innerHeight - spacing * (data.length - 1)) / data.length\n            : (innerWidth - spacing * (data.length - 1)) / data.length\n\n    const measureHeight = itemHeight * measureSize\n    const markerHeight = itemHeight * markerSize\n\n    const enhancedData = useEnhancedData(data, {\n        height: innerHeight,\n        layout,\n        maxValue: maxValue === 'auto' ? undefined : maxValue,\n        minValue: minValue === 'auto' ? undefined : minValue,\n        reverse,\n        width: innerWidth,\n    })\n\n    return (\n        <Container\n            isInteractive={isInteractive}\n            theme={theme}\n            animate={animate}\n            motionConfig={motionConfig}\n        >\n            <SvgWrapper width={width} height={height} margin={margin} role={role}>\n                {enhancedData.map((d, i) => (\n                    <BulletItem\n                        key={d.id}\n                        {...d}\n                        layout={layout}\n                        reverse={reverse}\n                        x={layout === 'vertical' ? itemHeight * i + spacing * i : 0}\n                        y={layout === 'horizontal' ? itemHeight * i + spacing * i : 0}\n                        width={innerWidth}\n                        height={itemHeight}\n                        titlePosition={titlePosition}\n                        titleAlign={titleAlign}\n                        titleOffsetX={titleOffsetX}\n                        titleOffsetY={titleOffsetY}\n                        titleRotation={titleRotation}\n                        measureHeight={measureHeight}\n                        markerHeight={markerHeight}\n                        rangeBorderColor={rangeBorderColor}\n                        rangeBorderWidth={rangeBorderWidth}\n                        rangeComponent={rangeComponent}\n                        rangeColors={rangeColors}\n                        measureBorderColor={measureBorderColor}\n                        measureBorderWidth={measureBorderWidth}\n                        measureComponent={measureComponent}\n                        measureColors={measureColors}\n                        markerComponent={markerComponent}\n                        markerColors={markerColors}\n                        axisPosition={axisPosition}\n                        onRangeClick={onRangeClick}\n                        onMeasureClick={onMeasureClick}\n                        onMarkerClick={onMarkerClick}\n                        tooltip={tooltip}\n                    />\n                ))}\n            </SvgWrapper>\n        </Container>\n    )\n}\n","import { createLinearScale } from '@nivo/scales'\nimport { useMemo } from 'react'\nimport { Datum, CommonBulletProps } from './types'\n\nexport const useEnhancedData = (\n    data: Datum[],\n    {\n        layout,\n        maxValue,\n        minValue,\n        reverse,\n        height,\n        width,\n    }: Pick<CommonBulletProps, 'layout' | 'reverse' | 'height' | 'width'> &\n        Record<'maxValue' | 'minValue', number | undefined>\n) => {\n    return useMemo(\n        () =>\n            data.map(d => {\n                const all = [...d.ranges, ...d.measures, ...(d.markers ?? [])]\n                const max = maxValue ?? Math.max(...all)\n                const min = minValue ?? Math.min(...all)\n\n                const scale = createLinearScale(\n                    { clamp: true, min, max, type: 'linear' },\n                    { all, max, min },\n                    layout === 'horizontal' ? width : height,\n                    layout === 'horizontal' ? (reverse ? 'y' : 'x') : reverse ? 'x' : 'y'\n                )\n\n                return {\n                    ...d,\n                    scale,\n                }\n            }),\n        [data, height, layout, maxValue, minValue, reverse, width]\n    )\n}\n","import { ResponsiveWrapper, Dimensions } from '@nivo/core'\nimport { BulletSvgProps } from './types'\nimport { Bullet } from './Bullet'\n\nexport const ResponsiveBullet = (props: Omit<BulletSvgProps, 'height' | 'width'>) => (\n    <ResponsiveWrapper>\n        {({ width, height }: Dimensions) => <Bullet width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\nimport { ResponsiveBullet } from \"@nivo/bullet\";\nimport { CButton, CButtonGroup, CCard, CCardBody, CCardHeader, CCol, CHeader, CRow } from '@coreui/react'\nimport {SchemeOptions} from './ColorSchemeOptions'\nimport Select from \"react-select\"\n\nconst NivoBullet = () => {\n    const [colorScheme, setColorScheme] = useState('spectral')\n\n    const bulletData = [\n        {\n          \"id\": \"temp.\",\n          \"ranges\": [\n            6,\n            11,\n            84,\n            0,\n            120\n          ],\n          \"measures\": [\n            79\n          ],\n          \"markers\": [\n            85\n          ]\n        },\n        {\n          \"id\": \"power\",\n          \"ranges\": [\n            1.7539488226374675,\n            0.07411831985925406,\n            1.67694676808163,\n            0,\n            2\n          ],\n          \"measures\": [\n            0.40276831869437024,\n            1.9303801399960938\n          ],\n          \"markers\": [\n            1.3253535190186139\n          ]\n        },\n        {\n          \"id\": \"volume\",\n          \"ranges\": [\n            56,\n            1,\n            38,\n            16,\n            3,\n            12,\n            0,\n            60\n          ],\n          \"measures\": [\n            20\n          ],\n          \"markers\": [\n            56\n          ]\n        },\n        {\n          \"id\": \"cost\",\n          \"ranges\": [\n            235840,\n            3236,\n            303703,\n            0,\n            500000\n          ],\n          \"measures\": [\n            128230,\n            390596\n          ],\n          \"markers\": [\n            417806\n          ]\n        },\n        {\n          \"id\": \"revenue\",\n          \"ranges\": [\n            9,\n            0,\n            3,\n            0,\n            9\n          ],\n          \"measures\": [\n            6\n          ],\n          \"markers\": [\n            5.919910146123294,\n            6.352503421611037\n          ]\n        }\n    ]\n\n    const MyResponsiveBullet = ({ data, colorScheme}) => (\n        <ResponsiveBullet\n            data={data}\n            margin={{ top: 50, right: 90, bottom: 50, left: 90 }}\n            spacing={46}\n            titleAlign=\"start\"\n            titleOffsetX={-70}\n            measureSize={0.2}\n            rangeColors={colorScheme}\n        />\n    )\n    MyResponsiveBullet.propTypes = {\n        data: PropTypes.object.isRequired,\n        colorScheme: PropTypes.string.isRequired,\n    } \n\n    const formatSelectOptions = ({value, label, colors}) => (\n        <div style={{display: 'flex'}}>\n            <div style={{minWidth:'80px'}}>{label}</div>\n            <div style={{alignItems:'end'}}>\n                {\n                    colors.map( (colorValue) => {\n                        return(\n                            <span key={colorValue} style={{backgroundColor:colorValue}}>\n                                &nbsp;&nbsp;\n                            </span>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n\n    const handleChange = (selectedOption) => {\n        setColorScheme(selectedOption.value)\n    }\n\n    const CustomSelectOptions = () => (\n        <Select\n            formatOptionLabel={formatSelectOptions}\n            defaultValue={Object.values(SchemeOptions)[0]}\n            options={Object.values(SchemeOptions)}\n            onChange={handleChange}\n        />\n    )\n\n\n    return(\n        <>\n            <CCard>\n                <CCardHeader>\n                    <CRow>\n                        <CCol sm={6}>\n                        <h4>Bullet Graph</h4>\n                        </CCol>\n                        <CCol sm={3}>\n                            {/* <CButtonGroup>\n                                {['horizontal', 'vertical'].map( (value) => (\n                                    <CButton \n                                    color='outline-secondary'\n                                    active={value === vertOrHor}\n                                    onClick={() => setVertOrHor(value.toLowerCase())}\n                                    key={value}>\n                                        {value}\n                                    </CButton>\n                                ))}\n                            </CButtonGroup> */}\n                        </CCol>\n                        <CCol sm={3}>\n                            <CustomSelectOptions />\n                        </CCol>\n                    </CRow>                \n                </CCardHeader>\n                <CCardBody style={{height:'600px'}}>\n                    <MyResponsiveBullet \n                        colorScheme={colorScheme}\n                        data={bulletData} />\n                </CCardBody>    \n            </CCard>  \n        </>\n    )\n\n}\nexport default NivoBullet"],"names":["SchemeOptions","value","label","colors","BulletRectsItem","animatedProps","x","y","width","height","color","borderColor","borderWidth","data","onMouseEnter","onMouseMove","onMouseLeave","onClick","_jsx","animated","rect","to","Math","max","fill","strokeWidth","stroke","e","event","defaultProps","layout","reverse","spacing","minValue","maxValue","axisPosition","titlePosition","titleAlign","titleRotation","titleOffsetX","titleOffsetY","rangeComponent","rangeColors","measureComponent","measureColors","markers","markerComponent","transform","y1","y2","line","x1","x2","markerColors","rangeBorderWidth","rangeBorderColor","from","measureSize","measureBorderWidth","measureBorderColor","markerSize","isInteractive","tooltip","v0","v1","BasicTooltip","id","_jsxs","enableChip","animate","motionDefaultProps","motionConfig","margin","defaultMargin","role","stackValues","values","scale","colorScale","type","useAverage","domain","min","includes","filter","v","sort","a","b","reduce","acc","index","last","slice","sequentialValue","W","BulletMarkers","component","getPosition","useMemo","marker","size","rotation","useMotionConfig","springConfig","config","transition","useTransition","map","position","keys","enter","update","immediate","props","React","key","BulletRects","rects","computeRect","d","h","theme","useTheme","getBorderColor","useInheritedColor","getTransform","measuresY","g","createElement","get","BulletItem","title","ranges","measureHeight","measures","markerHeight","J","onRangeClick","onMeasureClick","onMarkerClick","useTooltip","showTooltipFromEvent","hideTooltip","computedRanges","rangeColorScale","getColorScale","computedMeasures","measureColorScale","computedMarkers","markerColorScale","TooltipComponent","rangeNodes","range","markerNodes","axis","children","Axis","length","ticksPosition","titleNode","style","labels","_theme$labels","text","dominantBaseline","textAnchor","useSpring","measure","Bullet","partialMargin","useDimensions","innerWidth","innerHeight","itemHeight","enhancedData","all","createLinearScale","clamp","Container","SvgWrapper","i","ResponsiveBullet","ResponsiveWrapper","useState","colorScheme","setColorScheme","MyResponsiveBullet","top","right","bottom","left","formatSelectOptions","display","minWidth","alignItems","colorValue","backgroundColor","handleChange","selectedOption","CustomSelectOptions","formatOptionLabel","defaultValue","Object","options","onChange","CCard","CCardHeader","CRow","CCol","sm","CCardBody"],"sourceRoot":""}