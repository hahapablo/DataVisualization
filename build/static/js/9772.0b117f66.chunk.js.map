{"version":3,"file":"static/js/9772.0b117f66.chunk.js","mappings":"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","sources":["../node_modules/@nivo/axes/src/compute.ts","../node_modules/@nivo/axes/src/components/AxisTick.tsx","../node_modules/@nivo/axes/src/components/Axis.tsx","../node_modules/@nivo/axes/src/props.ts","../node_modules/@nivo/axes/src/components/Axes.tsx","../node_modules/@nivo/axes/src/components/GridLine.tsx","../node_modules/@nivo/axes/src/components/GridLines.tsx","../node_modules/@nivo/axes/src/components/Grid.tsx","../node_modules/@nivo/axes/src/canvas.ts","../node_modules/d3-scale/node_modules/d3-time/src/duration.js","../node_modules/d3-scale/node_modules/d3-time/src/interval.js","../node_modules/d3-scale/node_modules/d3-time/src/millisecond.js","../node_modules/d3-scale/node_modules/d3-time/src/second.js","../node_modules/d3-scale/node_modules/d3-time/src/minute.js","../node_modules/d3-scale/node_modules/d3-time/src/hour.js","../node_modules/d3-scale/node_modules/d3-time/src/day.js","../node_modules/d3-scale/node_modules/d3-time/src/week.js","../node_modules/d3-scale/node_modules/d3-time/src/month.js","../node_modules/d3-scale/node_modules/d3-time/src/year.js","../node_modules/d3-scale/node_modules/d3-time/src/utcMinute.js","../node_modules/d3-scale/node_modules/d3-time/src/utcHour.js","../node_modules/d3-scale/node_modules/d3-time/src/utcDay.js","../node_modules/d3-scale/node_modules/d3-time/src/utcWeek.js","../node_modules/d3-scale/node_modules/d3-time/src/utcMonth.js","../node_modules/d3-scale/node_modules/d3-time/src/utcYear.js","../node_modules/d3-scale/node_modules/d3-time/src/ticks.js","../node_modules/d3-scale/src/nice.js","../node_modules/d3-scale/src/time.js","../node_modules/d3-scale/src/log.js","../node_modules/d3-scale/src/symlog.js","../node_modules/d3-time/src/millisecond.js","../node_modules/d3-time/src/second.js","../node_modules/d3-time/src/minute.js","../node_modules/d3-time/src/utcMinute.js","../node_modules/d3-time/src/hour.js","../node_modules/d3-time/src/utcHour.js","../node_modules/d3-time/src/month.js","../node_modules/d3-time/src/utcMonth.js","../node_modules/@nivo/scales/src/timeHelpers.ts","../node_modules/@nivo/scales/src/linearScale.ts","../node_modules/@nivo/scales/src/pointScale.ts","../node_modules/@nivo/scales/src/bandScale.ts","../node_modules/@nivo/scales/src/timeScale.ts","../node_modules/d3-scale/src/utcTime.js","../node_modules/@nivo/scales/src/logScale.ts","../node_modules/@nivo/scales/src/symlogScale.ts","../node_modules/@nivo/scales/src/compute.ts","../node_modules/@nivo/scales/src/ticks.ts","../node_modules/d3-array/src/range.js","../node_modules/d3-scale/src/band.js","../node_modules/lodash/_baseIsDate.js","../node_modules/lodash/_baseMap.js","../node_modules/lodash/_baseOrderBy.js","../node_modules/lodash/_baseSortBy.js","../node_modules/lodash/_baseUniq.js","../node_modules/lodash/_compareAscending.js","../node_modules/lodash/_compareMultiple.js","../node_modules/lodash/_createSet.js","../node_modules/lodash/isDate.js","../node_modules/lodash/noop.js","../node_modules/lodash/sortBy.js","../node_modules/lodash/uniq.js","../node_modules/lodash/uniqBy.js"],"sourcesContent":["import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProps, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProps<X> | null\n        right?: CanvasAxisProps<Y> | null\n        bottom?: CanvasAxisProps<X> | null\n        left?: CanvasAxisProps<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProps<X> | undefined\n            : CanvasAxisProps<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","export const durationSecond = 1000;\nexport const durationMinute = durationSecond * 60;\nexport const durationHour = durationMinute * 60;\nexport const durationDay = durationHour * 24;\nexport const durationWeek = durationDay * 7;\nexport const durationMonth = durationDay * 30;\nexport const durationYear = durationDay * 365;\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = function(date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval.js\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","import interval from \"./interval.js\";\nimport {durationSecond} from \"./duration.js\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationSecond} from \"./duration.js\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval.js\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration.js\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval.js\";\nimport {durationDay, durationMinute} from \"./duration.js\";\n\nvar day = interval(\n  date => date.setHours(0, 0, 0, 0),\n  (date, step) => date.setDate(date.getDate() + step),\n  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,\n  date => date.getDate() - 1\n);\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationWeek} from \"./duration.js\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval.js\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval.js\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval.js\";\nimport {durationMinute} from \"./duration.js\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval.js\";\nimport {durationHour} from \"./duration.js\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval.js\";\nimport {durationDay} from \"./duration.js\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval.js\";\nimport {durationWeek} from \"./duration.js\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval.js\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval.js\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {bisector, tickStep} from \"d3-array\";\nimport {durationDay, durationHour, durationMinute, durationMonth, durationSecond, durationWeek, durationYear} from \"./duration.js\";\nimport millisecond from \"./millisecond.js\";\nimport second from \"./second.js\";\nimport minute from \"./minute.js\";\nimport hour from \"./hour.js\";\nimport day from \"./day.js\";\nimport {sunday as week} from \"./week.js\";\nimport month from \"./month.js\";\nimport year from \"./year.js\";\nimport utcMinute from \"./utcMinute.js\";\nimport utcHour from \"./utcHour.js\";\nimport utcDay from \"./utcDay.js\";\nimport {utcSunday as utcWeek} from \"./utcWeek.js\";\nimport utcMonth from \"./utcMonth.js\";\nimport utcYear from \"./utcYear.js\";\n\nfunction ticker(year, month, week, day, hour, minute) {\n\n  const tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function ticks(start, stop, count) {\n    const reverse = stop < start;\n    if (reverse) [start, stop] = [stop, start];\n    const interval = count && typeof count.range === \"function\" ? count : tickInterval(start, stop, count);\n    const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop\n    return reverse ? ticks.reverse() : ticks;\n  }\n\n  function tickInterval(start, stop, count) {\n    const target = Math.abs(stop - start) / count;\n    const i = bisector(([,, step]) => step).right(tickIntervals, target);\n    if (i === tickIntervals.length) return year.every(tickStep(start / durationYear, stop / durationYear, count));\n    if (i === 0) return millisecond.every(Math.max(tickStep(start, stop, count), 1));\n    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n    return t.every(step);\n  }\n\n  return [ticks, tickInterval];\n}\n\nconst [utcTicks, utcTickInterval] = ticker(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute);\nconst [timeTicks, timeTickInterval] = ticker(year, month, week, day, hour, minute);\n\nexport {utcTicks, utcTickInterval, timeTicks, timeTickInterval};\n","export default function nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeTicks, timeTickInterval} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport nice from \"./nice.js\";\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {\n  var scale = continuous(),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval) {\n    var d = domain();\n    if (!interval || typeof interval.range !== \"function\") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);\n    return interval ? domain(nice(d, interval)) : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));\n  };\n\n  return scale;\n}\n\nexport default function time() {\n  return initRange.apply(calendar(timeTicks, timeTickInterval, timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport nice from \"./nice.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport function loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = ticks(u, v, n);\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {linearish} from \"./linear.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import interval from \"./interval.js\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","import interval from \"./interval.js\";\nimport {durationSecond} from \"./duration.js\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationSecond} from \"./duration.js\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval.js\";\nimport {durationMinute} from \"./duration.js\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval.js\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration.js\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval.js\";\nimport {durationHour} from \"./duration.js\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval.js\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval.js\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import { timeParse, utcParse } from 'd3-time-format'\n\nexport const timePrecisions = [\n    'millisecond',\n    'second',\n    'minute',\n    'hour',\n    'day',\n    'month',\n    'year',\n] as const\n\nexport type TIME_PRECISION = typeof timePrecisions[number]\n\nexport const precisionCutOffs: ((date: Date) => void)[] = [\n    date => date.setMilliseconds(0),\n    date => date.setSeconds(0),\n    date => date.setMinutes(0),\n    date => date.setHours(0),\n    date => date.setDate(1),\n    date => date.setMonth(0),\n]\n\nexport const precisionCutOffsByType: Record<TIME_PRECISION, ((date: Date) => void)[]> = {\n    millisecond: [],\n    second: precisionCutOffs.slice(0, 1),\n    minute: precisionCutOffs.slice(0, 2),\n    hour: precisionCutOffs.slice(0, 3),\n    day: precisionCutOffs.slice(0, 4),\n    month: precisionCutOffs.slice(0, 5),\n    year: precisionCutOffs.slice(0, 6),\n}\n\nexport const createPrecisionMethod = (precision: TIME_PRECISION) => (date: Date) => {\n    precisionCutOffsByType[precision].forEach(cutOff => {\n        cutOff(date)\n    })\n\n    return date\n}\n\nexport const createDateNormalizer = ({\n    format = 'native',\n    precision = 'millisecond',\n    useUTC = true,\n}: {\n    format?: 'native' | string\n    precision?: TIME_PRECISION\n    useUTC?: boolean\n}) => {\n    const precisionFn = createPrecisionMethod(precision)\n\n    return (value: Date | string | undefined) => {\n        if (value === undefined) {\n            return value\n        }\n\n        if (format === 'native' || value instanceof Date) {\n            return precisionFn(value as Date)\n        }\n\n        const parseTime = useUTC ? utcParse(format) : timeParse(format)\n        return precisionFn(parseTime(value as string) as Date)\n    }\n}\n","import { NumberValue, scaleLinear, ScaleLinear as D3ScaleLinear } from 'd3-scale'\nimport { ScaleLinearSpec, ScaleLinear, ComputedSerieAxis, ScaleAxis } from './types'\n\nexport const createLinearScale = <Output extends NumberValue>(\n    {\n        min = 0,\n        max = 'auto',\n        stacked = false,\n        reverse = false,\n        clamp = false,\n        nice = false,\n    }: ScaleLinearSpec,\n    data: ComputedSerieAxis<Output>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    let minValue: NumberValue\n    if (min === 'auto') {\n        minValue = stacked === true ? data.minStacked ?? 0 : data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: NumberValue\n    if (max === 'auto') {\n        maxValue = stacked === true ? data.maxStacked ?? 0 : data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleLinear<number, Output>()\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .domain(reverse ? [maxValue, minValue] : [minValue, maxValue])\n        .clamp(clamp)\n\n    if (nice === true) scale.nice()\n    else if (typeof nice === 'number') scale.nice(nice)\n\n    return castLinearScale<number, Output>(scale, stacked)\n}\n\nexport const castLinearScale = <Range, Output>(\n    scale: D3ScaleLinear<Range, Output>,\n    stacked = false\n) => {\n    const typedScale = scale as unknown as ScaleLinear<number>\n    typedScale.type = 'linear'\n    typedScale.stacked = stacked\n\n    return typedScale\n}\n","import { scalePoint, ScalePoint as D3ScalePoint } from 'd3-scale'\nimport { ComputedSerieAxis, ScalePoint, ScalePointSpec, StringValue } from './types'\n\nexport const createPointScale = <Input extends StringValue>(\n    _spec: ScalePointSpec,\n    data: ComputedSerieAxis<Input>,\n    size: number\n) => {\n    const scale = scalePoint<Input>().range([0, size]).domain(data.all)\n\n    const typedScale = scale as ScalePoint<Input>\n    typedScale.type = 'point'\n\n    return typedScale\n}\n\nexport const castPointScale = <Input extends StringValue>(scale: D3ScalePoint<Input>) => {\n    const typedScale = scale as ScalePoint<Input>\n    typedScale.type = 'point'\n\n    return typedScale\n}\n","import { scaleBand, ScaleBand as D3ScaleBand } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleBand, ScaleBandSpec, StringValue, ScaleAxis } from './types'\n\nexport const createBandScale = <Input extends StringValue>(\n    { round = true }: ScaleBandSpec,\n    data: ComputedSerieAxis<Input>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    const scale = scaleBand<Input>()\n        .range(axis === 'x' ? [0, size] : [size, 0])\n        .domain(data.all)\n        .round(round)\n\n    return castBandScale<Input>(scale)\n}\n\nexport const castBandScale = <Input>(scale: D3ScaleBand<Input>) => {\n    const typedScale = scale as ScaleBand<Input>\n    typedScale.type = 'band'\n\n    return typedScale\n}\n","import { NumberValue, scaleTime, scaleUtc } from 'd3-scale'\nimport { createDateNormalizer } from './timeHelpers'\nimport { ComputedSerieAxis, ScaleTime, ScaleTimeSpec } from './types'\n\nexport const createTimeScale = <Input extends Date | NumberValue>(\n    {\n        format = 'native',\n        precision = 'millisecond',\n        min = 'auto',\n        max = 'auto',\n        useUTC = true,\n        nice = false,\n    }: ScaleTimeSpec,\n    data: ComputedSerieAxis<string | Date>,\n    size: number\n) => {\n    const normalize = createDateNormalizer({ format, precision, useUTC })\n\n    let minValue: Date | undefined\n    if (min === 'auto') {\n        minValue = normalize(data.min)\n    } else if (format !== 'native') {\n        minValue = normalize(min)\n    } else {\n        minValue = min as Date\n    }\n\n    let maxValue: Date | undefined\n    if (max === 'auto') {\n        maxValue = normalize(data.max)\n    } else if (format !== 'native') {\n        maxValue = normalize(max)\n    } else {\n        maxValue = max as Date\n    }\n\n    const scale = useUTC ? scaleUtc() : scaleTime()\n\n    scale.range([0, size])\n\n    if (minValue && maxValue) scale.domain([minValue, maxValue])\n\n    if (nice === true) scale.nice()\n    else if (typeof nice === 'object' || typeof nice === 'number') scale.nice(nice)\n\n    const typedScale = scale as unknown as ScaleTime<Input>\n\n    typedScale.type = 'time'\n    typedScale.useUTC = useUTC\n\n    return typedScale\n}\n","import {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcTicks, utcTickInterval} from \"d3-time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {calendar} from \"./time.js\";\nimport {initRange} from \"./init.js\";\n\nexport default function utcTime() {\n  return initRange.apply(calendar(utcTicks, utcTickInterval, utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n","import { scaleLog } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleAxis, ScaleLog, ScaleLogSpec } from './types'\n\nexport const createLogScale = (\n    { base = 10, min = 'auto', max = 'auto' }: ScaleLogSpec,\n    data: ComputedSerieAxis<number>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    const hasZero = data.all.some(v => v === 0)\n    if (hasZero) {\n        throw new Error(`a log scale domain must not include or cross zero`)\n    }\n\n    let sign: number\n    let hasMixedSign = false\n    data.all\n        .filter(v => v != null)\n        .forEach(v => {\n            if (hasMixedSign) return\n            if (sign === undefined) {\n                sign = Math.sign(v)\n            } else if (Math.sign(v) !== sign) {\n                hasMixedSign = true\n            }\n        })\n\n    if (hasMixedSign) {\n        throw new Error(`a log scale domain must be strictly-positive or strictly-negative`)\n    }\n\n    let minValue: number\n    if (min === 'auto') {\n        minValue = data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: number\n    if (max === 'auto') {\n        maxValue = data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleLog<number, number>()\n        .domain([minValue, maxValue])\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .base(base)\n        .nice()\n\n    const typedScale = scale as ScaleLog\n    typedScale.type = 'log'\n\n    return scale\n}\n","import { scaleSymlog } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleAxis, ScaleSymlog, ScaleSymlogSpec } from './types'\n\nexport const createSymlogScale = (\n    { constant = 1, min = 'auto', max = 'auto', reverse = false }: ScaleSymlogSpec,\n    data: ComputedSerieAxis<number>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    let minValue: number\n    if (min === 'auto') {\n        minValue = data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: number\n    if (max === 'auto') {\n        maxValue = data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleSymlog<number, number>()\n        .constant(constant)\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .nice()\n\n    if (reverse === true) scale.domain([maxValue, minValue])\n    else scale.domain([minValue, maxValue])\n\n    const typedScale = scale as ScaleSymlog\n    typedScale.type = 'symlog'\n\n    return typedScale\n}\n","import uniq from 'lodash/uniq'\nimport uniqBy from 'lodash/uniqBy'\nimport sortBy from 'lodash/sortBy'\nimport last from 'lodash/last'\nimport isDate from 'lodash/isDate'\nimport { createDateNormalizer } from './timeHelpers'\nimport { ScaleAxis, ScaleSpec, ScaleValue, SerieAxis, ComputedSerieAxis } from './types'\nimport { createLinearScale } from './linearScale'\nimport { createPointScale } from './pointScale'\nimport { createBandScale } from './bandScale'\nimport { createTimeScale } from './timeScale'\nimport { createLogScale } from './logScale'\nimport { createSymlogScale } from './symlogScale'\n\ntype XY = ReturnType<typeof generateSeriesXY>\n\ntype StackedXY = {\n    [K in keyof XY]: XY[K] & {\n        maxStacked: number\n        minStacked: number\n    }\n}\n\ninterface SerieDatum {\n    x: number | string | Date\n    // only numbers can be stacked\n    xStacked?: number | null\n    y: number | string | Date\n    // only numbers can be stacked\n    yStacked?: number | null\n}\n\ntype Serie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: D[]\n}\n\ntype NestedSerie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: {\n        data: D\n    }[]\n}\n\nexport type ComputedSerie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: {\n        data: D\n        position: {\n            x: number | null\n            y: number | null\n        }\n    }[]\n}\n\ntype Compare = <T>(a: T, b: T) => boolean\n\nexport const getOtherAxis = (axis: ScaleAxis): ScaleAxis => (axis === 'x' ? 'y' : 'x')\n\nexport const compareValues = (a: string | number, b: string | number) => a === b\nexport const compareDateValues = (a: Date, b: Date) => a.getTime() === b.getTime()\n\nexport function computeScale<Input extends ScaleValue>(\n    spec: ScaleSpec,\n    data: ComputedSerieAxis<any>,\n    size: number,\n    axis: ScaleAxis\n) {\n    switch (spec.type) {\n        case 'linear':\n            return createLinearScale(spec, data, size, axis)\n        case 'point':\n            return createPointScale<Input>(spec, data, size)\n        case 'band':\n            return createBandScale<Input>(spec, data, size, axis)\n        case 'time':\n            return createTimeScale(spec, data, size)\n        case 'log':\n            return createLogScale(spec, data, size, axis)\n        case 'symlog':\n            return createSymlogScale(spec, data, size, axis)\n        default:\n            throw new Error('invalid scale spec')\n    }\n}\n\n/**\n * Convert serie data to have the original data stored in a nested prop.\n *\n * We do this in order to avoid conflicts between raw & computed properties.\n * <- { data: { x: 1, y: 3 }[] }\n * -> { data: { data: { x: 1, y: 3 } }[] }\n */\nconst nestSerieData = <S = never, D extends SerieDatum = SerieDatum>(\n    serie: Serie<S, D>\n): NestedSerie<S, D> => ({\n    ...serie,\n    data: serie.data.map(d => ({ data: { ...d } })),\n})\n\nconst getDatumAxisPosition = <D extends SerieDatum = SerieDatum>(\n    datum: { data: D },\n    axis: ScaleAxis,\n    scale: any\n): number | null => {\n    if ('stacked' in scale && scale.stacked) {\n        const stackedValue = datum.data[axis === 'x' ? 'xStacked' : 'yStacked']\n        if (stackedValue === null || stackedValue === undefined) {\n            return null\n        }\n\n        return scale(stackedValue)\n    }\n\n    return scale(datum.data[axis]) ?? null\n}\n\n/**\n * Compute x/y d3 scales from an array of data series, and scale specifications.\n *\n * We use generics as it's not uncommon to have extra properties such as an id\n * added to the series, or extra props on data, in such case, you should override\n * the default types.\n */\nexport const computeXYScalesForSeries = <S = never, D extends SerieDatum = SerieDatum>(\n    series: Serie<S, D>[],\n    xScaleSpec: ScaleSpec,\n    yScaleSpec: ScaleSpec,\n    width: number,\n    height: number\n) => {\n    // first nest series to avoid property conflicts\n    const nestedSeries = series.map(serie => nestSerieData<S, D>(serie))\n\n    // then compute data for each axis: all, min, max values\n    const xy = generateSeriesXY<S, D>(nestedSeries, xScaleSpec, yScaleSpec)\n\n    // stack x values depending on xScale\n    if ('stacked' in xScaleSpec && xScaleSpec.stacked === true) {\n        stackX<S, D>(xy as StackedXY, nestedSeries)\n    }\n\n    // stack y values depending on yScale\n    if ('stacked' in yScaleSpec && yScaleSpec.stacked === true) {\n        stackY<S, D>(xy as StackedXY, nestedSeries)\n    }\n\n    // computes scales\n    const xScale = computeScale<D['x']>(xScaleSpec, xy.x, width, 'x')\n    const yScale = computeScale<D['y']>(yScaleSpec, xy.y, height, 'y')\n\n    // assign position to each datum in every scale\n    const computedSeries: ComputedSerie<S, D>[] = nestedSeries.map(serie => ({\n        ...serie,\n        data: serie.data.map(datum => ({\n            ...datum,\n            position: {\n                x: getDatumAxisPosition(datum, 'x', xScale),\n                y: getDatumAxisPosition(datum, 'y', yScale),\n            },\n        })),\n    }))\n\n    return {\n        ...xy,\n        series: computedSeries,\n        xScale,\n        yScale,\n    }\n}\n\nexport const generateSeriesXY = <S = never, D extends SerieDatum = SerieDatum>(\n    series: NestedSerie<S, D>[],\n    xScaleSpec: ScaleSpec,\n    yScaleSpec: ScaleSpec\n) => ({\n    x: generateSeriesAxis<'x', D['x']>(series, 'x', xScaleSpec),\n    y: generateSeriesAxis<'y', D['y']>(series, 'y', yScaleSpec),\n})\n\n/**\n * Normalize data according to scale type, (time => Date, linear => Number)\n * compute sorted unique values and min/max.\n */\nexport const generateSeriesAxis = <Axis extends ScaleAxis, Value extends ScaleValue>(\n    series: SerieAxis<Axis, Value>,\n    axis: Axis,\n    scaleSpec: ScaleSpec,\n    {\n        getValue = d => d.data[axis],\n        setValue = (d, v) => {\n            d.data[axis] = v\n        },\n    }: {\n        getValue?: (d: { data: Record<Axis, Value | null> }) => Value | null\n        setValue?: (d: { data: Record<Axis, Value | null> }, v: Value) => void\n    } = {}\n) => {\n    if (scaleSpec.type === 'linear') {\n        series.forEach(serie => {\n            serie.data.forEach(d => {\n                const value = getValue(d)\n\n                if (value) {\n                    setValue(d, parseFloat(String(value)) as unknown as Value)\n                }\n            })\n        })\n    } else if (scaleSpec.type === 'time' && scaleSpec.format !== 'native') {\n        // `native` means we already have Date instances,\n        // otherwise we have to convert the values to Date.\n        const parseTime = createDateNormalizer(scaleSpec)\n\n        series.forEach(serie => {\n            serie.data.forEach(d => {\n                const value = getValue(d)\n\n                if (value) {\n                    setValue(d, parseTime(value as Date) as unknown as Value)\n                }\n            })\n        })\n    }\n\n    const values: unknown[] = []\n\n    series.forEach(serie => {\n        serie.data.forEach(d => {\n            values.push(getValue(d))\n        })\n    })\n\n    switch (scaleSpec.type) {\n        case 'linear': {\n            const all = sortBy(\n                // filer null values to deal with holes in linechart\n                uniq(values as number[]).filter(v => v !== null),\n                v => v\n            )\n\n            return { all, min: Math.min(...all), max: Math.max(...all) }\n        }\n        case 'time': {\n            const all = uniqBy(values as Date[], v => v.getTime())\n                .slice(0)\n                .sort((a, b) => b.getTime() - a.getTime())\n                .reverse()\n\n            return { all, min: all[0], max: last(all) }\n        }\n        default: {\n            const all = uniq(values)\n\n            return { all, min: all[0], max: last(all) }\n        }\n    }\n}\n\nexport const stackAxis = <S = never, D extends SerieDatum = SerieDatum>(\n    axis: ScaleAxis,\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => {\n    const otherAxis = getOtherAxis(axis)\n    const all: number[] = []\n\n    xy[otherAxis].all.forEach(v => {\n        const compare = (isDate(v) ? compareDateValues : compareValues) as Compare\n        const stack: Array<number | null> = []\n\n        series.forEach(serie => {\n            const datum = serie.data.find(d => compare(d.data[otherAxis], v))\n            let value = null\n            let stackValue = null\n\n            if (datum !== undefined) {\n                // stacked values only support numbers\n                value = datum.data[axis] as number\n                if (value !== null) {\n                    const head = last(stack)\n                    if (head === undefined) {\n                        stackValue = value\n                    } else if (head !== null) {\n                        stackValue = head + value\n                    }\n                }\n\n                datum.data[axis === 'x' ? 'xStacked' : 'yStacked'] = stackValue\n            }\n\n            stack.push(stackValue)\n\n            if (stackValue !== null) {\n                all.push(stackValue)\n            }\n        })\n    })\n\n    xy[axis].minStacked = Math.min(...all)\n    xy[axis].maxStacked = Math.max(...all)\n}\n\nconst stackX = <S = never, D extends SerieDatum = SerieDatum>(\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => stackAxis<S, D>('x', xy, series)\n\nconst stackY = <S = never, D extends SerieDatum = SerieDatum>(\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => stackAxis<S, D>('y', xy, series)\n","import {\n    CountableTimeInterval,\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n    timeInterval,\n} from 'd3-time'\nimport { ScaleValue, TicksSpec, AnyScale, ScaleWithBandwidth } from './types'\n\nexport const centerScale = <Value>(scale: ScaleWithBandwidth) => {\n    const bandwidth = scale.bandwidth()\n\n    if (bandwidth === 0) return scale\n\n    let offset = bandwidth / 2\n    if (scale.round()) {\n        offset = Math.round(offset)\n    }\n\n    return <T extends Value>(d: T) => (scale(d) ?? 0) + offset\n}\n\nconst timeDay = timeInterval(\n    date => date.setHours(0, 0, 0, 0),\n    (date, step) => date.setDate(date.getDate() + step),\n    (start, end) => (end.getTime() - start.getTime()) / 864e5,\n    date => Math.floor(date.getTime() / 864e5)\n)\n\nconst utcDay = timeInterval(\n    date => date.setUTCHours(0, 0, 0, 0),\n    (date, step) => date.setUTCDate(date.getUTCDate() + step),\n    (start, end) => (end.getTime() - start.getTime()) / 864e5,\n    date => Math.floor(date.getTime() / 864e5)\n)\n\nconst timeByType: Record<string, [CountableTimeInterval, CountableTimeInterval]> = {\n    millisecond: [timeMillisecond, utcMillisecond],\n    second: [timeSecond, utcSecond],\n    minute: [timeMinute, utcMinute],\n    hour: [timeHour, utcHour],\n    day: [timeDay, utcDay],\n    week: [timeWeek, utcWeek],\n    sunday: [timeSunday, utcSunday],\n    monday: [timeMonday, utcMonday],\n    tuesday: [timeTuesday, utcTuesday],\n    wednesday: [timeWednesday, utcWednesday],\n    thursday: [timeThursday, utcThursday],\n    friday: [timeFriday, utcFriday],\n    saturday: [timeSaturday, utcSaturday],\n    month: [timeMonth, utcMonth],\n    year: [timeYear, utcYear],\n}\n\nconst timeTypes = Object.keys(timeByType)\nconst timeIntervalRegexp = new RegExp(`^every\\\\s*(\\\\d+)?\\\\s*(${timeTypes.join('|')})s?$`, 'i')\n\nconst isInteger = (value: unknown): value is number =>\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n\nexport const getScaleTicks = <Value extends ScaleValue>(\n    scale: AnyScale,\n    spec?: TicksSpec<Value>\n) => {\n    // specific values\n    if (Array.isArray(spec)) {\n        return spec\n    }\n\n    if (typeof spec === 'string' && 'useUTC' in scale) {\n        // time interval\n        const matches = spec.match(timeIntervalRegexp)\n\n        if (matches) {\n            const [, amount, type] = matches\n            // UTC is used as it's more predictable\n            // however local time could be used too\n            // let's see how it fits users' requirements\n            const timeType = timeByType[type][scale.useUTC ? 1 : 0]\n\n            if (type === 'day') {\n                const [start, originalStop] = scale.domain()\n                const stop = new Date(originalStop)\n\n                // Set range to include last day in the domain since `interval.range` function is exclusive stop\n                stop.setDate(stop.getDate() + 1)\n\n                return timeType.every(Number(amount ?? 1))?.range(start, stop) ?? []\n            }\n\n            if (amount === undefined) {\n                return scale.ticks(timeType)\n            }\n\n            const interval = timeType.every(Number(amount))\n\n            if (interval) {\n                return scale.ticks(interval)\n            }\n        }\n\n        throw new Error(`Invalid tickValues: ${spec}`)\n    }\n\n    // continuous scales\n    if ('ticks' in scale) {\n        // default behaviour\n        if (spec === undefined) {\n            return scale.ticks()\n        }\n\n        // specific tick count\n        if (isInteger(spec)) {\n            return scale.ticks(spec)\n        }\n    }\n\n    // non linear scale default\n    return scale.domain()\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init.js\";\nimport ordinal from \"./ordinal.js\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n\n  scale.rangeRound = function(_) {\n    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), [r0, r1])\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar dateTag = '[object Date]';\n\n/**\n * The base implementation of `_.isDate` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n */\nfunction baseIsDate(value) {\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\n}\n\nmodule.exports = baseIsDate;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","var baseIsDate = require('./_baseIsDate'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\nmodule.exports = isDate;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n","var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n"],"names":["computeCartesianTicks","translate","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","f","values","getScaleTicks","textProps","textPropsByEngine","position","centerScale","line","lineX","lineY","text","textX","textY","isRTL","document","dir","textAlign","align","center","textBaseline","baseline","d","x","y","top","bottom","left","right","ticks","map","value","key","getFormatter","format","type","formatter","timeFormat","Date","d3Format","computeGridLines","width","height","_values","Array","isArray","lines","x1","x2","y1","y2","memoizedAxisTick","memo","_value","onClick","textAnchor","animatedProps","theme","useTheme","props","useMemo","style","opacity","cursor","event","_jsxs","animated","g","transform","_jsx","dominantBaseline","textTransform","memoizedAxis","length","P","w","O","renderTick","AxisTick","legend","legendPosition","V","R","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","useMotionConfig","animate","springConfig","config","useSpring","lineX2","lineY2","immediate","transition","useTransition","keys","t","tick","initial","from","enter","update","leave","transitionProps","_state","tickIndex","React","rotate","domain","axisPropTypes","PropTypes","positions","Axes","xScale","yScale","axes","isXAxis","Axis","GridLine","grid","GridLines","_createElement","Grid","xValues","yValues","xLines","yLines","renderAxesToCanvas","ctx","forEach","a","l","u","k","_format","T","save","font","fontWeight","fontSize","fontFamily","strokeWidth","lineWidth","Number","lineCap","stroke","strokeStyle","beginPath","moveTo","lineTo","degreesToRadians","fill","fillStyle","fillText","String","restore","renderAxisToCanvas","renderGridLinesToCanvas","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","durationYear","t0","t1","newInterval","floori","offseti","count","field","interval","date","arguments","floor","ceil","round","d0","d1","offset","step","Math","range","start","stop","previous","push","filter","test","setTime","end","every","isFinite","millisecond","second","getMilliseconds","getUTCSeconds","minute","getSeconds","getMinutes","hour","getHours","day","setHours","setDate","getDate","getTimezoneOffset","weekday","i","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month","setMonth","getMonth","getFullYear","year","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","ticker","week","tickIntervals","tickInterval","target","abs","bisector","tickStep","max","reverse","utcWeek","utcTicks","utcTickInterval","timeTicks","timeTickInterval","nice","i0","i1","slice","x0","number","calendar","continuous","invert","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickFormat","_","specifier","copy","transformLog","log","transformExp","exp","transformLogn","transformExpn","pow10","reflect","loggish","logs","pows","base","rescale","E","log10","log2","logp","pow","powp","r","v","p","j","n","z","min","Infinity","transformer","initRange","transformSymlog","c","sign","log1p","transformSymexp","expm1","symlogish","constant","linearish","symlog","precisionCutOffs","setMilliseconds","setSeconds","setMinutes","precisionCutOffsByType","createDateNormalizer","e","precision","useUTC","precisionFn","cutOff","createPrecisionMethod","parseTime","utcParse","timeParse","createLinearScale","data","size","minValue","maxValue","s","m","stacked","clamp","minStacked","maxStacked","scaleLinear","rangeRound","castLinearScale","typedScale","castPointScale","castBandScale","createTimeScale","normalize","utcSecond","utcFormat","UTC","scaleUtc","timeYear","timeMonth","timeWeek","timeDay","timeHour","timeMinute","timeSecond","scaleTime","createLogScale","all","some","Error","hasMixedSign","scaleLog","createSymlogScale","o","scaleSymlog","computeScale","spec","_spec","scalePoint","createPointScale","scaleBand","createBandScale","bandwidth","timeByType","timeMillisecond","utcMillisecond","timeInterval","getTime","timeSunday","timeMonday","timeTuesday","timeWednesday","timeThursday","timeFriday","timeSaturday","timeTypes","Object","timeIntervalRegexp","RegExp","join","matches","match","amount","timeType","originalStop","_timeType$every","band","ordinal","unknown","undefined","ordinalRange","r0","r1","paddingInner","paddingOuter","sequence","padding","pointish","point","apply","baseGetTag","require","isObjectLike","module","exports","baseEach","isArrayLike","collection","iteratee","index","result","arrayMap","baseGet","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","iteratees","orders","object","other","array","comparer","sort","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","comparator","includes","isCommon","seen","set","outer","computed","seenIndex","isSymbol","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","compareAscending","objCriteria","criteria","othCriteria","ordersLength","Set","noop","baseIsDate","nodeUtil","nodeIsDate","isDate","baseFlatten","baseOrderBy","baseRest","isIterateeCall","sortBy","baseUniq"],"sourceRoot":""}