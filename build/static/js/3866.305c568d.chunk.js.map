{"version":3,"file":"static/js/3866.305c568d.chunk.js","mappings":"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","sources":["views/buttons/button-groups/ButtonGroups.js"],"sourcesContent":["import React from 'react'\nimport {\n  CButton,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CButtonGroup,\n  CButtonToolbar,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CFormCheck,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport { DocsCallout, DocsExample } from 'src/components'\n\nconst ButtonGroups = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <DocsCallout name=\"Button Group\" href=\"components/button-group\" />\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Button Group</strong> <span>Basic example</span>\n          </CCardHeader>\n          <CCardBody>\n            <p>\n              Wrap a series of <code>&lt;CButton&gt;</code> components in{' '}\n              <code>&lt;CButtonGroup&gt;</code>.{' '}\n            </p>\n            <DocsExample href=\"components/button-group\">\n              <CButtonGroup role=\"group\" aria-label=\"Basic example\">\n                <CButton color=\"primary\">Left</CButton>\n                <CButton color=\"primary\">Middle</CButton>\n                <CButton color=\"primary\">Right</CButton>\n              </CButtonGroup>\n            </DocsExample>\n            <p>\n              These classes can also be added to groups of links, as an alternative to the{' '}\n              <code>&lt;CNav&gt;</code> components.\n            </p>\n            <DocsExample href=\"components/button-group\">\n              <CButtonGroup>\n                <CButton href=\"#\" color=\"primary\" active>\n                  Active link\n                </CButton>\n                <CButton href=\"#\" color=\"primary\">\n                  Link\n                </CButton>\n                <CButton href=\"#\" color=\"primary\">\n                  Link\n                </CButton>\n              </CButtonGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Button Group</strong> <span>Mixed styles</span>\n          </CCardHeader>\n          <CCardBody>\n            <DocsExample href=\"components/button-group#mixed-styles\">\n              <CButtonGroup role=\"group\" aria-label=\"Basic mixed styles example\">\n                <CButton color=\"danger\">Left</CButton>\n                <CButton color=\"warning\">Middle</CButton>\n                <CButton color=\"success\">Right</CButton>\n              </CButtonGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Button Group</strong> <span>Outlined styles</span>\n          </CCardHeader>\n          <CCardBody>\n            <DocsExample href=\"components/button-group#outlined-styles\">\n              <CButtonGroup role=\"group\" aria-label=\"Basic outlined example\">\n                <CButton color=\"primary\" variant=\"outline\">\n                  Left\n                </CButton>\n                <CButton color=\"primary\" variant=\"outline\">\n                  Middle\n                </CButton>\n                <CButton color=\"primary\" variant=\"outline\">\n                  Right\n                </CButton>\n              </CButtonGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Button Group</strong> <span>Checkbox and radio button groups</span>\n          </CCardHeader>\n          <CCardBody>\n            <p>\n              Combine button-like checkbox and radio toggle buttons into a seamless looking button\n              group.\n            </p>\n            <DocsExample href=\"components/button-group#checkbox-and-radio-button-groups\">\n              <CButtonGroup role=\"group\" aria-label=\"Basic checkbox toggle button group\">\n                <CFormCheck\n                  button={{ variant: 'outline' }}\n                  id=\"btncheck1\"\n                  autoComplete=\"off\"\n                  label=\"Checkbox 1\"\n                />\n                <CFormCheck\n                  button={{ variant: 'outline' }}\n                  id=\"btncheck2\"\n                  autoComplete=\"off\"\n                  label=\"Checkbox 2\"\n                />\n                <CFormCheck\n                  button={{ variant: 'outline' }}\n                  id=\"btncheck3\"\n                  autoComplete=\"off\"\n                  label=\"Checkbox 3\"\n                />\n              </CButtonGroup>\n            </DocsExample>\n            <DocsExample href=\"components/button-group#checkbox-and-radio-button-groups\">\n              <CButtonGroup role=\"group\" aria-label=\"Basic checkbox toggle button group\">\n                <CFormCheck\n                  type=\"radio\"\n                  button={{ variant: 'outline' }}\n                  name=\"btnradio\"\n                  id=\"btnradio1\"\n                  autoComplete=\"off\"\n                  label=\"Radio 1\"\n                />\n                <CFormCheck\n                  type=\"radio\"\n                  button={{ variant: 'outline' }}\n                  name=\"btnradio\"\n                  id=\"btnradio2\"\n                  autoComplete=\"off\"\n                  label=\"Radio 2\"\n                />\n                <CFormCheck\n                  type=\"radio\"\n                  button={{ variant: 'outline' }}\n                  name=\"btnradio\"\n                  id=\"btnradio3\"\n                  autoComplete=\"off\"\n                  label=\"Radio 3\"\n                />\n              </CButtonGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Button Group</strong> <span>Button toolbar</span>\n          </CCardHeader>\n          <CCardBody>\n            <p>\n              Join sets of button groups into button toolbars for more complicated components. Use\n              utility classes as needed to space out groups, buttons, and more.\n            </p>\n            <DocsExample href=\"components/button-group#button-toolbar\">\n              <CButtonToolbar role=\"group\" aria-label=\"Toolbar with button groups\">\n                <CButtonGroup className=\"me-2\" role=\"group\" aria-label=\"First group\">\n                  <CButton color=\"primary\">1</CButton>\n                  <CButton color=\"primary\">2</CButton>\n                  <CButton color=\"primary\">3</CButton>\n                  <CButton color=\"primary\">4</CButton>\n                </CButtonGroup>\n                <CButtonGroup className=\"me-2\" role=\"group\" aria-label=\"Second group\">\n                  <CButton color=\"secondary\">5</CButton>\n                  <CButton color=\"secondary\">6</CButton>\n                  <CButton color=\"secondary\">7</CButton>\n                </CButtonGroup>\n                <CButtonGroup className=\"me-2\" role=\"group\" aria-label=\"Third group\">\n                  <CButton color=\"info\">8</CButton>\n                </CButtonGroup>\n              </CButtonToolbar>\n            </DocsExample>\n            <p>\n              Feel free to combine input groups with button groups in your toolbars. Similar to the\n              example above, you’ll likely need some utilities through to space items correctly.\n            </p>\n            <DocsExample href=\"components/button-group#button-toolbar\">\n              <CButtonToolbar className=\"mb-3\" role=\"group\" aria-label=\"Toolbar with button groups\">\n                <CButtonGroup className=\"me-2\" role=\"group\" aria-label=\"First group\">\n                  <CButton color=\"secondary\" variant=\"outline\">\n                    1\n                  </CButton>\n                  <CButton color=\"secondary\" variant=\"outline\">\n                    2\n                  </CButton>\n                  <CButton color=\"secondary\" variant=\"outline\">\n                    3\n                  </CButton>\n                  <CButton color=\"secondary\" variant=\"outline\">\n                    4\n                  </CButton>\n                </CButtonGroup>\n                <CInputGroup>\n                  <CInputGroupText>@</CInputGroupText>\n                  <CFormInput\n                    placeholder=\"Input group example\"\n                    aria-label=\"Input group example\"\n                    aria-describedby=\"btnGroupAddon\"\n                  />\n                </CInputGroup>\n              </CButtonToolbar>\n              <CButtonToolbar\n                className=\"justify-content-between\"\n                role=\"group\"\n                aria-label=\"Toolbar with button groups\"\n              >\n                <CButtonGroup className=\"me-2\" role=\"group\" aria-label=\"First group\">\n                  <CButton color=\"secondary\" variant=\"outline\">\n                    1\n                  </CButton>\n                  <CButton color=\"secondary\" variant=\"outline\">\n                    2\n                  </CButton>\n                  <CButton color=\"secondary\" variant=\"outline\">\n                    3\n                  </CButton>\n                  <CButton color=\"secondary\" variant=\"outline\">\n                    4\n                  </CButton>\n                </CButtonGroup>\n                <CInputGroup>\n                  <CInputGroupText>@</CInputGroupText>\n                  <CFormInput\n                    placeholder=\"Input group example\"\n                    aria-label=\"Input group example\"\n                    aria-describedby=\"btnGroupAddon\"\n                  />\n                </CInputGroup>\n              </CButtonToolbar>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Button Group</strong> <span>Sizing</span>\n          </CCardHeader>\n          <CCardBody>\n            <p>\n              Alternatively, of implementing button sizing classes to each button in a group, set{' '}\n              <code>size</code> property to all <code>&lt;CButtonGroup&gt;</code>&#39;s, including\n              each one when nesting multiple groups.\n            </p>\n            <DocsExample href=\"components/button-group#sizing\">\n              <CButtonGroup size=\"lg\" role=\"group\" aria-label=\"Large button group\">\n                <CButton color=\"dark\" variant=\"outline\">\n                  Left\n                </CButton>\n                <CButton color=\"dark\" variant=\"outline\">\n                  Middle\n                </CButton>\n                <CButton color=\"dark\" variant=\"outline\">\n                  Right\n                </CButton>\n              </CButtonGroup>\n              <br />\n              <CButtonGroup role=\"group\" aria-label=\"Default button group\">\n                <CButton color=\"dark\" variant=\"outline\">\n                  Left\n                </CButton>\n                <CButton color=\"dark\" variant=\"outline\">\n                  Middle\n                </CButton>\n                <CButton color=\"dark\" variant=\"outline\">\n                  Right\n                </CButton>\n              </CButtonGroup>\n              <br />\n              <CButtonGroup size=\"sm\" role=\"group\" aria-label=\"Small button group\">\n                <CButton color=\"dark\" variant=\"outline\">\n                  Left\n                </CButton>\n                <CButton color=\"dark\" variant=\"outline\">\n                  Middle\n                </CButton>\n                <CButton color=\"dark\" variant=\"outline\">\n                  Right\n                </CButton>\n              </CButtonGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Button Group</strong> <span>Nesting</span>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Put a <code>&lt;CButtonGroup&gt;</code> inside another{' '}\n              <code>&lt;CButtonGroup&gt;</code> when you need dropdown menus combined with a series\n              of buttons.\n            </p>\n            <DocsExample href=\"components/button-group#nesting\">\n              <CButtonGroup role=\"group\" aria-label=\"Button group with nested dropdown\">\n                <CButton color=\"primary\">1</CButton>\n                <CButton color=\"primary\">2</CButton>\n                <CDropdown variant=\"btn-group\">\n                  <CDropdownToggle color=\"primary\">Dropdown</CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem href=\"#\">Action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                    <CDropdownDivider />\n                    <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n              </CButtonGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Button Group</strong> <span>Vertical variation</span>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Create a set of buttons that appear vertically stacked rather than horizontally.{' '}\n              <strong>Split button dropdowns are not supported here.</strong>\n            </p>\n            <DocsExample href=\"components/button-group/#vertical-variation\">\n              <CButtonGroup vertical role=\"group\" aria-label=\"Vertical button group\">\n                <CButton color=\"dark\">Button</CButton>\n                <CButton color=\"dark\">Button</CButton>\n                <CButton color=\"dark\">Button</CButton>\n                <CButton color=\"dark\">Button</CButton>\n                <CButton color=\"dark\">Button</CButton>\n                <CButton color=\"dark\">Button</CButton>\n                <CButton color=\"dark\">Button</CButton>\n              </CButtonGroup>\n            </DocsExample>\n            <DocsExample href=\"components/button-group/#vertical-variation\">\n              <CButtonGroup vertical role=\"group\" aria-label=\"Vertical button group\">\n                <CButton color=\"primary\">Button</CButton>\n                <CButton color=\"primary\">Button</CButton>\n                <CDropdown variant=\"btn-group\">\n                  <CDropdownToggle color=\"primary\">Dropdown</CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem href=\"#\">Action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                    <CDropdownDivider />\n                    <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n                <CButton color=\"primary\">Button</CButton>\n                <CButton color=\"primary\">Button</CButton>\n                <CDropdown variant=\"btn-group\">\n                  <CDropdownToggle color=\"primary\">Dropdown</CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem href=\"#\">Action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                    <CDropdownDivider />\n                    <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n                <CDropdown variant=\"btn-group\">\n                  <CDropdownToggle color=\"primary\">Dropdown</CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem href=\"#\">Action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                    <CDropdownDivider />\n                    <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n                <CDropdown variant=\"btn-group\">\n                  <CDropdownToggle color=\"primary\">Dropdown</CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem href=\"#\">Action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                    <CDropdownDivider />\n                    <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n              </CButtonGroup>\n            </DocsExample>\n            <DocsExample href=\"components/button-group/#vertical-variation\">\n              <CButtonGroup vertical role=\"group\" aria-label=\"Vertical button group\">\n                <CFormCheck\n                  type=\"radio\"\n                  button={{ color: 'danger', variant: 'outline' }}\n                  name=\"vbtnradio\"\n                  id=\"vbtnradio1\"\n                  autoComplete=\"off\"\n                  label=\"Radio 1\"\n                  defaultChecked\n                />\n                <CFormCheck\n                  type=\"radio\"\n                  button={{ color: 'danger', variant: 'outline' }}\n                  name=\"vbtnradio\"\n                  id=\"vbtnradio2\"\n                  autoComplete=\"off\"\n                  label=\"Radio 2\"\n                />\n                <CFormCheck\n                  type=\"radio\"\n                  button={{ color: 'danger', variant: 'outline' }}\n                  name=\"vbtnradio\"\n                  id=\"vbtnradio3\"\n                  autoComplete=\"off\"\n                  label=\"Radio 3\"\n                />\n              </CButtonGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default ButtonGroups\n"],"names":["CRow","CCol","xs","name","href","CCard","className","CCardHeader","CCardBody","CButtonGroup","role","CButton","color","active","variant","CFormCheck","button","id","autoComplete","label","type","CButtonToolbar","CInputGroup","CInputGroupText","CFormInput","placeholder","size","CDropdown","CDropdownToggle","CDropdownMenu","CDropdownItem","CDropdownDivider","vertical","defaultChecked"],"sourceRoot":""}